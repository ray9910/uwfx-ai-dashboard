import * as z from "zod";
export type LicenseKeyUser = {
    id: string;
    publicName: string;
    email: string;
    avatarUrl: string | null;
};
/** @internal */
export declare const LicenseKeyUser$inboundSchema: z.ZodType<LicenseKeyUser, z.ZodTypeDef, unknown>;
/** @internal */
export type LicenseKeyUser$Outbound = {
    id: string;
    public_name: string;
    email: string;
    avatar_url: string | null;
};
/** @internal */
export declare const LicenseKeyUser$outboundSchema: z.ZodType<LicenseKeyUser$Outbound, z.ZodTypeDef, LicenseKeyUser>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace LicenseKeyUser$ {
    /** @deprecated use `LicenseKeyUser$inboundSchema` instead. */
    const inboundSchema: z.ZodType<LicenseKeyUser, z.ZodTypeDef, unknown>;
    /** @deprecated use `LicenseKeyUser$outboundSchema` instead. */
    const outboundSchema: z.ZodType<LicenseKeyUser$Outbound, z.ZodTypeDef, LicenseKeyUser>;
    /** @deprecated use `LicenseKeyUser$Outbound` instead. */
    type Outbound = LicenseKeyUser$Outbound;
}
//# sourceMappingURL=licensekeyuser.d.ts.map