"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PolarCheckoutSchemasCheckoutCreate$ = exports.PolarCheckoutSchemasCheckoutCreate$outboundSchema = exports.PolarCheckoutSchemasCheckoutCreate$inboundSchema = exports.PaymentProcessor$ = exports.PaymentProcessor$outboundSchema = exports.PaymentProcessor$inboundSchema = exports.PaymentProcessor = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const address_js_1 = require("./address.js");
/**
 * Payment processor to use. Currently only Stripe is supported.
 */
exports.PaymentProcessor = {
    Stripe: "stripe",
};
/** @internal */
exports.PaymentProcessor$inboundSchema = z.nativeEnum(exports.PaymentProcessor);
/** @internal */
exports.PaymentProcessor$outboundSchema = exports.PaymentProcessor$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PaymentProcessor$;
(function (PaymentProcessor$) {
    /** @deprecated use `PaymentProcessor$inboundSchema` instead. */
    PaymentProcessor$.inboundSchema = exports.PaymentProcessor$inboundSchema;
    /** @deprecated use `PaymentProcessor$outboundSchema` instead. */
    PaymentProcessor$.outboundSchema = exports.PaymentProcessor$outboundSchema;
})(PaymentProcessor$ || (exports.PaymentProcessor$ = PaymentProcessor$ = {}));
/** @internal */
exports.PolarCheckoutSchemasCheckoutCreate$inboundSchema = z.object({
    metadata: z.record(z.string()).optional(),
    payment_processor: z.literal("stripe").optional(),
    product_price_id: z.string(),
    amount: z.nullable(z.number().int()).optional(),
    customer_name: z.nullable(z.string()).optional(),
    customer_email: z.nullable(z.string()).optional(),
    customer_ip_address: z.nullable(z.string()).optional(),
    customer_billing_address: z.nullable(address_js_1.Address$inboundSchema).optional(),
    customer_tax_id: z.nullable(z.string()).optional(),
    success_url: z.nullable(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "payment_processor": "paymentProcessor",
        "product_price_id": "productPriceId",
        "customer_name": "customerName",
        "customer_email": "customerEmail",
        "customer_ip_address": "customerIpAddress",
        "customer_billing_address": "customerBillingAddress",
        "customer_tax_id": "customerTaxId",
        "success_url": "successUrl",
    });
});
/** @internal */
exports.PolarCheckoutSchemasCheckoutCreate$outboundSchema = z.object({
    metadata: z.record(z.string()).optional(),
    paymentProcessor: z.literal("stripe").default("stripe"),
    productPriceId: z.string(),
    amount: z.nullable(z.number().int()).optional(),
    customerName: z.nullable(z.string()).optional(),
    customerEmail: z.nullable(z.string()).optional(),
    customerIpAddress: z.nullable(z.string()).optional(),
    customerBillingAddress: z.nullable(address_js_1.Address$outboundSchema).optional(),
    customerTaxId: z.nullable(z.string()).optional(),
    successUrl: z.nullable(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        paymentProcessor: "payment_processor",
        productPriceId: "product_price_id",
        customerName: "customer_name",
        customerEmail: "customer_email",
        customerIpAddress: "customer_ip_address",
        customerBillingAddress: "customer_billing_address",
        customerTaxId: "customer_tax_id",
        successUrl: "success_url",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var PolarCheckoutSchemasCheckoutCreate$;
(function (PolarCheckoutSchemasCheckoutCreate$) {
    /** @deprecated use `PolarCheckoutSchemasCheckoutCreate$inboundSchema` instead. */
    PolarCheckoutSchemasCheckoutCreate$.inboundSchema = exports.PolarCheckoutSchemasCheckoutCreate$inboundSchema;
    /** @deprecated use `PolarCheckoutSchemasCheckoutCreate$outboundSchema` instead. */
    PolarCheckoutSchemasCheckoutCreate$.outboundSchema = exports.PolarCheckoutSchemasCheckoutCreate$outboundSchema;
})(PolarCheckoutSchemasCheckoutCreate$ || (exports.PolarCheckoutSchemasCheckoutCreate$ = PolarCheckoutSchemasCheckoutCreate$ = {}));
//# sourceMappingURL=polarcheckoutschemascheckoutcreate.js.map