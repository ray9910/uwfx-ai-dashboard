import * as z from "zod";
import { BenefitArticles, BenefitArticles$Outbound } from "./benefitarticles.js";
import { BenefitBase, BenefitBase$Outbound } from "./benefitbase.js";
import { ProductMediaFileRead, ProductMediaFileRead$Outbound, ProductMediaFileReadInput, ProductMediaFileReadInput$Outbound } from "./productmediafileread.js";
import { ProductPrice, ProductPrice$Outbound } from "./productprice.js";
export type ProductBenefits = BenefitBase | BenefitArticles;
/**
 * A product.
 */
export type Product = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the product.
     */
    id: string;
    /**
     * The name of the product.
     */
    name: string;
    /**
     * The description of the product.
     */
    description: string | null;
    /**
     * Whether the product is a subscription tier.
     */
    isRecurring: boolean;
    /**
     * Whether the product is archived and no longer available.
     */
    isArchived: boolean;
    /**
     * The ID of the organization owning the product.
     */
    organizationId: string;
    /**
     * List of available prices for this product.
     */
    prices: Array<ProductPrice>;
    /**
     * The benefits granted by the product.
     */
    benefits: Array<BenefitBase | BenefitArticles>;
    /**
     * The medias associated to the product.
     */
    medias: Array<ProductMediaFileRead>;
};
/**
 * A product.
 */
export type ProductInput = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the product.
     */
    id: string;
    /**
     * The name of the product.
     */
    name: string;
    /**
     * The description of the product.
     */
    description: string | null;
    /**
     * Whether the product is a subscription tier.
     */
    isRecurring: boolean;
    /**
     * Whether the product is archived and no longer available.
     */
    isArchived: boolean;
    /**
     * The ID of the organization owning the product.
     */
    organizationId: string;
    /**
     * List of available prices for this product.
     */
    prices: Array<ProductPrice>;
    /**
     * The benefits granted by the product.
     */
    benefits: Array<BenefitBase | BenefitArticles>;
    /**
     * The medias associated to the product.
     */
    medias: Array<ProductMediaFileReadInput>;
};
/** @internal */
export declare const ProductBenefits$inboundSchema: z.ZodType<ProductBenefits, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductBenefits$Outbound = BenefitBase$Outbound | BenefitArticles$Outbound;
/** @internal */
export declare const ProductBenefits$outboundSchema: z.ZodType<ProductBenefits$Outbound, z.ZodTypeDef, ProductBenefits>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductBenefits$ {
    /** @deprecated use `ProductBenefits$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductBenefits, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductBenefits$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductBenefits$Outbound, z.ZodTypeDef, ProductBenefits>;
    /** @deprecated use `ProductBenefits$Outbound` instead. */
    type Outbound = ProductBenefits$Outbound;
}
/** @internal */
export declare const Product$inboundSchema: z.ZodType<Product, z.ZodTypeDef, unknown>;
/** @internal */
export type Product$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    name: string;
    description: string | null;
    is_recurring: boolean;
    is_archived: boolean;
    organization_id: string;
    prices: Array<ProductPrice$Outbound>;
    benefits: Array<BenefitBase$Outbound | BenefitArticles$Outbound>;
    medias: Array<ProductMediaFileRead$Outbound>;
};
/** @internal */
export declare const Product$outboundSchema: z.ZodType<Product$Outbound, z.ZodTypeDef, Product>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Product$ {
    /** @deprecated use `Product$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Product, z.ZodTypeDef, unknown>;
    /** @deprecated use `Product$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Product$Outbound, z.ZodTypeDef, Product>;
    /** @deprecated use `Product$Outbound` instead. */
    type Outbound = Product$Outbound;
}
/** @internal */
export declare const ProductInput$inboundSchema: z.ZodType<ProductInput, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductInput$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    name: string;
    description: string | null;
    is_recurring: boolean;
    is_archived: boolean;
    organization_id: string;
    prices: Array<ProductPrice$Outbound>;
    benefits: Array<BenefitBase$Outbound | BenefitArticles$Outbound>;
    medias: Array<ProductMediaFileReadInput$Outbound>;
};
/** @internal */
export declare const ProductInput$outboundSchema: z.ZodType<ProductInput$Outbound, z.ZodTypeDef, ProductInput>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductInput$ {
    /** @deprecated use `ProductInput$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductInput, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductInput$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductInput$Outbound, z.ZodTypeDef, ProductInput>;
    /** @deprecated use `ProductInput$Outbound` instead. */
    type Outbound = ProductInput$Outbound;
}
//# sourceMappingURL=product.d.ts.map