import * as z from "zod";
import { ExternalOrganization, ExternalOrganization$Outbound } from "./externalorganization.js";
import { RepositoryProfileSettings, RepositoryProfileSettings$Outbound } from "./repositoryprofilesettings.js";
export type Repository = {
    id: string;
    platform?: "github" | undefined;
    isPrivate: boolean;
    name: string;
    description: string | null;
    stars: number | null;
    license: string | null;
    homepage: string | null;
    /**
     * Settings for the repository profile
     */
    profileSettings: RepositoryProfileSettings | null;
    organization: ExternalOrganization;
};
/** @internal */
export declare const Repository$inboundSchema: z.ZodType<Repository, z.ZodTypeDef, unknown>;
/** @internal */
export type Repository$Outbound = {
    id: string;
    platform: "github";
    is_private: boolean;
    name: string;
    description: string | null;
    stars: number | null;
    license: string | null;
    homepage: string | null;
    profile_settings: RepositoryProfileSettings$Outbound | null;
    organization: ExternalOrganization$Outbound;
};
/** @internal */
export declare const Repository$outboundSchema: z.ZodType<Repository$Outbound, z.ZodTypeDef, Repository>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Repository$ {
    /** @deprecated use `Repository$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Repository, z.ZodTypeDef, unknown>;
    /** @deprecated use `Repository$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Repository$Outbound, z.ZodTypeDef, Repository>;
    /** @deprecated use `Repository$Outbound` instead. */
    type Outbound = Repository$Outbound;
}
//# sourceMappingURL=repository.d.ts.map