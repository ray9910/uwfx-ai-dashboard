import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { SubscriptionInput, SubscriptionInput$Outbound } from "./subscriptioninput.js";
export declare const WebhookSubscriptionActivePayloadType: {
    readonly SubscriptionActive: "subscription.active";
};
export type WebhookSubscriptionActivePayloadType = ClosedEnum<typeof WebhookSubscriptionActivePayloadType>;
/**
 * Sent when a subscription becomes active,
 *
 * @remarks
 * whether because it's a new paid subscription or because payment was recovered.
 *
 * **Discord & Slack support:** Full
 */
export type WebhookSubscriptionActivePayload = {
    type?: "subscription.active" | undefined;
    data: SubscriptionInput;
};
/** @internal */
export declare const WebhookSubscriptionActivePayloadType$inboundSchema: z.ZodNativeEnum<typeof WebhookSubscriptionActivePayloadType>;
/** @internal */
export declare const WebhookSubscriptionActivePayloadType$outboundSchema: z.ZodNativeEnum<typeof WebhookSubscriptionActivePayloadType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WebhookSubscriptionActivePayloadType$ {
    /** @deprecated use `WebhookSubscriptionActivePayloadType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly SubscriptionActive: "subscription.active";
    }>;
    /** @deprecated use `WebhookSubscriptionActivePayloadType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly SubscriptionActive: "subscription.active";
    }>;
}
/** @internal */
export declare const WebhookSubscriptionActivePayload$inboundSchema: z.ZodType<WebhookSubscriptionActivePayload, z.ZodTypeDef, unknown>;
/** @internal */
export type WebhookSubscriptionActivePayload$Outbound = {
    type: "subscription.active";
    data: SubscriptionInput$Outbound;
};
/** @internal */
export declare const WebhookSubscriptionActivePayload$outboundSchema: z.ZodType<WebhookSubscriptionActivePayload$Outbound, z.ZodTypeDef, WebhookSubscriptionActivePayload>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WebhookSubscriptionActivePayload$ {
    /** @deprecated use `WebhookSubscriptionActivePayload$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WebhookSubscriptionActivePayload, z.ZodTypeDef, unknown>;
    /** @deprecated use `WebhookSubscriptionActivePayload$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WebhookSubscriptionActivePayload$Outbound, z.ZodTypeDef, WebhookSubscriptionActivePayload>;
    /** @deprecated use `WebhookSubscriptionActivePayload$Outbound` instead. */
    type Outbound = WebhookSubscriptionActivePayload$Outbound;
}
//# sourceMappingURL=webhooksubscriptionactivepayload.d.ts.map