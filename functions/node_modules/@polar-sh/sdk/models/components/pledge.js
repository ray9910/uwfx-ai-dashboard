"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Pledge$ = exports.Pledge$outboundSchema = exports.Pledge$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const issue_js_1 = require("./issue.js");
const pledger_js_1 = require("./pledger.js");
const pledgestate_js_1 = require("./pledgestate.js");
const pledgetype_js_1 = require("./pledgetype.js");
/** @internal */
exports.Pledge$inboundSchema = z
    .object({
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    modified_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    id: z.string(),
    amount: z.number().int(),
    currency: z.string(),
    state: pledgestate_js_1.PledgeState$inboundSchema,
    type: pledgetype_js_1.PledgeType$inboundSchema,
    refunded_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    scheduled_payout_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    issue: issue_js_1.Issue$inboundSchema,
    pledger: z.nullable(pledger_js_1.Pledger$inboundSchema).optional(),
    hosted_invoice_url: z.nullable(z.string()).optional(),
    authed_can_admin_sender: z.boolean().default(false),
    authed_can_admin_received: z.boolean().default(false),
    created_by: z.nullable(pledger_js_1.Pledger$inboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "created_at": "createdAt",
        "modified_at": "modifiedAt",
        "refunded_at": "refundedAt",
        "scheduled_payout_at": "scheduledPayoutAt",
        "hosted_invoice_url": "hostedInvoiceUrl",
        "authed_can_admin_sender": "authedCanAdminSender",
        "authed_can_admin_received": "authedCanAdminReceived",
        "created_by": "createdBy",
    });
});
/** @internal */
exports.Pledge$outboundSchema = z.object({
    createdAt: z.date().transform(v => v.toISOString()),
    modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
    id: z.string(),
    amount: z.number().int(),
    currency: z.string(),
    state: pledgestate_js_1.PledgeState$outboundSchema,
    type: pledgetype_js_1.PledgeType$outboundSchema,
    refundedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    scheduledPayoutAt: z.nullable(z.date().transform(v => v.toISOString()))
        .optional(),
    issue: issue_js_1.Issue$outboundSchema,
    pledger: z.nullable(pledger_js_1.Pledger$outboundSchema).optional(),
    hostedInvoiceUrl: z.nullable(z.string()).optional(),
    authedCanAdminSender: z.boolean().default(false),
    authedCanAdminReceived: z.boolean().default(false),
    createdBy: z.nullable(pledger_js_1.Pledger$outboundSchema).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        createdAt: "created_at",
        modifiedAt: "modified_at",
        refundedAt: "refunded_at",
        scheduledPayoutAt: "scheduled_payout_at",
        hostedInvoiceUrl: "hosted_invoice_url",
        authedCanAdminSender: "authed_can_admin_sender",
        authedCanAdminReceived: "authed_can_admin_received",
        createdBy: "created_by",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Pledge$;
(function (Pledge$) {
    /** @deprecated use `Pledge$inboundSchema` instead. */
    Pledge$.inboundSchema = exports.Pledge$inboundSchema;
    /** @deprecated use `Pledge$outboundSchema` instead. */
    Pledge$.outboundSchema = exports.Pledge$outboundSchema;
})(Pledge$ || (exports.Pledge$ = Pledge$ = {}));
//# sourceMappingURL=pledge.js.map