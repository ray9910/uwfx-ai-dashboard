import * as z from "zod";
export type OrderProduct = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the product.
     */
    id: string;
    /**
     * The name of the product.
     */
    name: string;
    /**
     * The description of the product.
     */
    description: string | null;
    /**
     * Whether the product is a subscription tier.
     */
    isRecurring: boolean;
    /**
     * Whether the product is archived and no longer available.
     */
    isArchived: boolean;
    /**
     * The ID of the organization owning the product.
     */
    organizationId: string;
};
/** @internal */
export declare const OrderProduct$inboundSchema: z.ZodType<OrderProduct, z.ZodTypeDef, unknown>;
/** @internal */
export type OrderProduct$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    name: string;
    description: string | null;
    is_recurring: boolean;
    is_archived: boolean;
    organization_id: string;
};
/** @internal */
export declare const OrderProduct$outboundSchema: z.ZodType<OrderProduct$Outbound, z.ZodTypeDef, OrderProduct>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrderProduct$ {
    /** @deprecated use `OrderProduct$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrderProduct, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrderProduct$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrderProduct$Outbound, z.ZodTypeDef, OrderProduct>;
    /** @deprecated use `OrderProduct$Outbound` instead. */
    type Outbound = OrderProduct$Outbound;
}
//# sourceMappingURL=orderproduct.d.ts.map