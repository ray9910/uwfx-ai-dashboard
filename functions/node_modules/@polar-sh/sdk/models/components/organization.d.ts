import * as z from "zod";
import { OrganizationFeatureSettings, OrganizationFeatureSettings$Outbound } from "./organizationfeaturesettings.js";
import { OrganizationProfileSettings, OrganizationProfileSettings$Outbound } from "./organizationprofilesettings.js";
export type Organization = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The organization ID.
     */
    id: string;
    name: string;
    slug: string;
    avatarUrl: string | null;
    bio: string | null;
    company: string | null;
    blog: string | null;
    location: string | null;
    email: string | null;
    twitterUsername: string | null;
    pledgeMinimumAmount: number;
    pledgeBadgeShowAmount: boolean;
    defaultUpfrontSplitToContributors: number | null;
    /**
     * If this organizations accepts donations
     */
    donationsEnabled: boolean;
    /**
     * Settings for the organization profile
     */
    profileSettings: OrganizationProfileSettings | null;
    /**
     * Settings for the organization features
     */
    featureSettings: OrganizationFeatureSettings | null;
};
/** @internal */
export declare const Organization$inboundSchema: z.ZodType<Organization, z.ZodTypeDef, unknown>;
/** @internal */
export type Organization$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    name: string;
    slug: string;
    avatar_url: string | null;
    bio: string | null;
    company: string | null;
    blog: string | null;
    location: string | null;
    email: string | null;
    twitter_username: string | null;
    pledge_minimum_amount: number;
    pledge_badge_show_amount: boolean;
    default_upfront_split_to_contributors: number | null;
    donations_enabled: boolean;
    profile_settings: OrganizationProfileSettings$Outbound | null;
    feature_settings: OrganizationFeatureSettings$Outbound | null;
};
/** @internal */
export declare const Organization$outboundSchema: z.ZodType<Organization$Outbound, z.ZodTypeDef, Organization>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Organization$ {
    /** @deprecated use `Organization$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Organization, z.ZodTypeDef, unknown>;
    /** @deprecated use `Organization$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Organization$Outbound, z.ZodTypeDef, Organization>;
    /** @deprecated use `Organization$Outbound` instead. */
    type Outbound = Organization$Outbound;
}
//# sourceMappingURL=organization.d.ts.map