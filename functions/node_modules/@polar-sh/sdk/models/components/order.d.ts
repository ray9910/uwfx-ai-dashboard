import * as z from "zod";
import { OrderBillingReason } from "./orderbillingreason.js";
import { OrderProduct, OrderProduct$Outbound } from "./orderproduct.js";
import { OrderSubscription, OrderSubscription$Outbound } from "./ordersubscription.js";
import { OrderUser, OrderUser$Outbound } from "./orderuser.js";
import { ProductPrice, ProductPrice$Outbound } from "./productprice.js";
export type Order = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the object.
     */
    id: string;
    metadata: {
        [k: string]: string;
    };
    amount: number;
    taxAmount: number;
    currency: string;
    billingReason: OrderBillingReason;
    userId: string;
    productId: string;
    productPriceId: string;
    subscriptionId: string | null;
    checkoutId: string | null;
    user: OrderUser;
    product: OrderProduct;
    productPrice: ProductPrice;
    subscription: OrderSubscription | null;
};
/** @internal */
export declare const Order$inboundSchema: z.ZodType<Order, z.ZodTypeDef, unknown>;
/** @internal */
export type Order$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    metadata: {
        [k: string]: string;
    };
    amount: number;
    tax_amount: number;
    currency: string;
    billing_reason: string;
    user_id: string;
    product_id: string;
    product_price_id: string;
    subscription_id: string | null;
    checkout_id: string | null;
    user: OrderUser$Outbound;
    product: OrderProduct$Outbound;
    product_price: ProductPrice$Outbound;
    subscription: OrderSubscription$Outbound | null;
};
/** @internal */
export declare const Order$outboundSchema: z.ZodType<Order$Outbound, z.ZodTypeDef, Order>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Order$ {
    /** @deprecated use `Order$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Order, z.ZodTypeDef, unknown>;
    /** @deprecated use `Order$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Order$Outbound, z.ZodTypeDef, Order>;
    /** @deprecated use `Order$Outbound` instead. */
    type Outbound = Order$Outbound;
}
//# sourceMappingURL=order.d.ts.map