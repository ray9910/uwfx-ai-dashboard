import * as z from "zod";
export type OrderUser = {
    id: string;
    email: string;
    publicName: string;
    githubUsername: string | null;
    avatarUrl: string | null;
};
/** @internal */
export declare const OrderUser$inboundSchema: z.ZodType<OrderUser, z.ZodTypeDef, unknown>;
/** @internal */
export type OrderUser$Outbound = {
    id: string;
    email: string;
    public_name: string;
    github_username: string | null;
    avatar_url: string | null;
};
/** @internal */
export declare const OrderUser$outboundSchema: z.ZodType<OrderUser$Outbound, z.ZodTypeDef, OrderUser>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrderUser$ {
    /** @deprecated use `OrderUser$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrderUser, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrderUser$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrderUser$Outbound, z.ZodTypeDef, OrderUser>;
    /** @deprecated use `OrderUser$Outbound` instead. */
    type Outbound = OrderUser$Outbound;
}
//# sourceMappingURL=orderuser.d.ts.map