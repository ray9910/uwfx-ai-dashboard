import * as z from "zod";
import { Metric, Metric$Outbound } from "./metric.js";
export type Metrics = {
    /**
     * Information about a metric.
     */
    orders: Metric;
    /**
     * Information about a metric.
     */
    revenue: Metric;
    /**
     * Information about a metric.
     */
    averageOrderValue: Metric;
    /**
     * Information about a metric.
     */
    oneTimeProducts: Metric;
    /**
     * Information about a metric.
     */
    oneTimeProductsRevenue: Metric;
    /**
     * Information about a metric.
     */
    newSubscriptions: Metric;
    /**
     * Information about a metric.
     */
    newSubscriptionsRevenue: Metric;
    /**
     * Information about a metric.
     */
    renewedSubscriptions: Metric;
    /**
     * Information about a metric.
     */
    renewedSubscriptionsRevenue: Metric;
    /**
     * Information about a metric.
     */
    activeSubscriptions: Metric;
    /**
     * Information about a metric.
     */
    monthlyRecurringRevenue: Metric;
};
/** @internal */
export declare const Metrics$inboundSchema: z.ZodType<Metrics, z.ZodTypeDef, unknown>;
/** @internal */
export type Metrics$Outbound = {
    orders: Metric$Outbound;
    revenue: Metric$Outbound;
    average_order_value: Metric$Outbound;
    one_time_products: Metric$Outbound;
    one_time_products_revenue: Metric$Outbound;
    new_subscriptions: Metric$Outbound;
    new_subscriptions_revenue: Metric$Outbound;
    renewed_subscriptions: Metric$Outbound;
    renewed_subscriptions_revenue: Metric$Outbound;
    active_subscriptions: Metric$Outbound;
    monthly_recurring_revenue: Metric$Outbound;
};
/** @internal */
export declare const Metrics$outboundSchema: z.ZodType<Metrics$Outbound, z.ZodTypeDef, Metrics>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Metrics$ {
    /** @deprecated use `Metrics$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Metrics, z.ZodTypeDef, unknown>;
    /** @deprecated use `Metrics$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Metrics$Outbound, z.ZodTypeDef, Metrics>;
    /** @deprecated use `Metrics$Outbound` instead. */
    type Outbound = Metrics$Outbound;
}
//# sourceMappingURL=metrics.d.ts.map