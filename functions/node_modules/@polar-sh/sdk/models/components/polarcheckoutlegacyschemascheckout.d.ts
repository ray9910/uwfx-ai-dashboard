import * as z from "zod";
import { Product, Product$Outbound } from "./product.js";
import { ProductPrice, ProductPrice$Outbound } from "./productprice.js";
/**
 * A checkout session.
 */
export type PolarCheckoutLegacySchemasCheckout = {
    /**
     * The ID of the checkout.
     */
    id: string;
    /**
     * URL the customer should be redirected to complete the purchase.
     */
    url?: string | null | undefined;
    customerEmail: string | null;
    customerName: string | null;
    /**
     * A product.
     */
    product: Product;
    productPrice: ProductPrice;
};
/** @internal */
export declare const PolarCheckoutLegacySchemasCheckout$inboundSchema: z.ZodType<PolarCheckoutLegacySchemasCheckout, z.ZodTypeDef, unknown>;
/** @internal */
export type PolarCheckoutLegacySchemasCheckout$Outbound = {
    id: string;
    url?: string | null | undefined;
    customer_email: string | null;
    customer_name: string | null;
    product: Product$Outbound;
    product_price: ProductPrice$Outbound;
};
/** @internal */
export declare const PolarCheckoutLegacySchemasCheckout$outboundSchema: z.ZodType<PolarCheckoutLegacySchemasCheckout$Outbound, z.ZodTypeDef, PolarCheckoutLegacySchemasCheckout>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PolarCheckoutLegacySchemasCheckout$ {
    /** @deprecated use `PolarCheckoutLegacySchemasCheckout$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PolarCheckoutLegacySchemasCheckout, z.ZodTypeDef, unknown>;
    /** @deprecated use `PolarCheckoutLegacySchemasCheckout$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PolarCheckoutLegacySchemasCheckout$Outbound, z.ZodTypeDef, PolarCheckoutLegacySchemasCheckout>;
    /** @deprecated use `PolarCheckoutLegacySchemasCheckout$Outbound` instead. */
    type Outbound = PolarCheckoutLegacySchemasCheckout$Outbound;
}
//# sourceMappingURL=polarcheckoutlegacyschemascheckout.d.ts.map