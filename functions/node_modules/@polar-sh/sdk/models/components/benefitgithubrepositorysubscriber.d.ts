import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BenefitGitHubRepositorySubscriberProperties, BenefitGitHubRepositorySubscriberProperties$Outbound } from "./benefitgithubrepositorysubscriberproperties.js";
export declare const BenefitGitHubRepositorySubscriberType: {
    readonly GithubRepository: "github_repository";
};
export type BenefitGitHubRepositorySubscriberType = ClosedEnum<typeof BenefitGitHubRepositorySubscriberType>;
export type BenefitGitHubRepositorySubscriber = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the benefit.
     */
    id: string;
    type?: "github_repository" | undefined;
    /**
     * The description of the benefit.
     */
    description: string;
    /**
     * Whether the benefit is selectable when creating a product.
     */
    selectable: boolean;
    /**
     * Whether the benefit is deletable.
     */
    deletable: boolean;
    /**
     * The ID of the organization owning the benefit.
     */
    organizationId: string;
    /**
     * Properties available to subscribers for a benefit of type `github_repository`.
     */
    properties: BenefitGitHubRepositorySubscriberProperties;
};
/** @internal */
export declare const BenefitGitHubRepositorySubscriberType$inboundSchema: z.ZodNativeEnum<typeof BenefitGitHubRepositorySubscriberType>;
/** @internal */
export declare const BenefitGitHubRepositorySubscriberType$outboundSchema: z.ZodNativeEnum<typeof BenefitGitHubRepositorySubscriberType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitGitHubRepositorySubscriberType$ {
    /** @deprecated use `BenefitGitHubRepositorySubscriberType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly GithubRepository: "github_repository";
    }>;
    /** @deprecated use `BenefitGitHubRepositorySubscriberType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly GithubRepository: "github_repository";
    }>;
}
/** @internal */
export declare const BenefitGitHubRepositorySubscriber$inboundSchema: z.ZodType<BenefitGitHubRepositorySubscriber, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitGitHubRepositorySubscriber$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    type: "github_repository";
    description: string;
    selectable: boolean;
    deletable: boolean;
    organization_id: string;
    properties: BenefitGitHubRepositorySubscriberProperties$Outbound;
};
/** @internal */
export declare const BenefitGitHubRepositorySubscriber$outboundSchema: z.ZodType<BenefitGitHubRepositorySubscriber$Outbound, z.ZodTypeDef, BenefitGitHubRepositorySubscriber>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitGitHubRepositorySubscriber$ {
    /** @deprecated use `BenefitGitHubRepositorySubscriber$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitGitHubRepositorySubscriber, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitGitHubRepositorySubscriber$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitGitHubRepositorySubscriber$Outbound, z.ZodTypeDef, BenefitGitHubRepositorySubscriber>;
    /** @deprecated use `BenefitGitHubRepositorySubscriber$Outbound` instead. */
    type Outbound = BenefitGitHubRepositorySubscriber$Outbound;
}
//# sourceMappingURL=benefitgithubrepositorysubscriber.d.ts.map