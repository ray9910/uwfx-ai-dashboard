import * as z from "zod";
export type MetricPeriod = {
    /**
     * Timestamp of this period data.
     */
    timestamp: Date;
    orders: number;
    revenue: number;
    averageOrderValue: number;
    oneTimeProducts: number;
    oneTimeProductsRevenue: number;
    newSubscriptions: number;
    newSubscriptionsRevenue: number;
    renewedSubscriptions: number;
    renewedSubscriptionsRevenue: number;
    activeSubscriptions: number;
    monthlyRecurringRevenue: number;
};
/** @internal */
export declare const MetricPeriod$inboundSchema: z.ZodType<MetricPeriod, z.ZodTypeDef, unknown>;
/** @internal */
export type MetricPeriod$Outbound = {
    timestamp: string;
    orders: number;
    revenue: number;
    average_order_value: number;
    one_time_products: number;
    one_time_products_revenue: number;
    new_subscriptions: number;
    new_subscriptions_revenue: number;
    renewed_subscriptions: number;
    renewed_subscriptions_revenue: number;
    active_subscriptions: number;
    monthly_recurring_revenue: number;
};
/** @internal */
export declare const MetricPeriod$outboundSchema: z.ZodType<MetricPeriod$Outbound, z.ZodTypeDef, MetricPeriod>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace MetricPeriod$ {
    /** @deprecated use `MetricPeriod$inboundSchema` instead. */
    const inboundSchema: z.ZodType<MetricPeriod, z.ZodTypeDef, unknown>;
    /** @deprecated use `MetricPeriod$outboundSchema` instead. */
    const outboundSchema: z.ZodType<MetricPeriod$Outbound, z.ZodTypeDef, MetricPeriod>;
    /** @deprecated use `MetricPeriod$Outbound` instead. */
    type Outbound = MetricPeriod$Outbound;
}
//# sourceMappingURL=metricperiod.d.ts.map