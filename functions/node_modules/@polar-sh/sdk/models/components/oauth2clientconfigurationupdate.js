"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OAuth2ClientConfigurationUpdate$ = exports.OAuth2ClientConfigurationUpdate$outboundSchema = exports.OAuth2ClientConfigurationUpdate$inboundSchema = exports.OAuth2ClientConfigurationUpdateResponseTypes$ = exports.OAuth2ClientConfigurationUpdateResponseTypes$outboundSchema = exports.OAuth2ClientConfigurationUpdateResponseTypes$inboundSchema = exports.OAuth2ClientConfigurationUpdateGrantTypes$ = exports.OAuth2ClientConfigurationUpdateGrantTypes$outboundSchema = exports.OAuth2ClientConfigurationUpdateGrantTypes$inboundSchema = exports.OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$ = exports.OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$outboundSchema = exports.OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$inboundSchema = exports.OAuth2ClientConfigurationUpdateResponseTypes = exports.OAuth2ClientConfigurationUpdateGrantTypes = exports.OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
exports.OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod = {
    ClientSecretBasic: "client_secret_basic",
    ClientSecretPost: "client_secret_post",
    None: "none",
};
exports.OAuth2ClientConfigurationUpdateGrantTypes = {
    AuthorizationCode: "authorization_code",
    RefreshToken: "refresh_token",
};
exports.OAuth2ClientConfigurationUpdateResponseTypes = {
    Code: "code",
};
/** @internal */
exports.OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$inboundSchema = z.nativeEnum(exports.OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod);
/** @internal */
exports.OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$outboundSchema = exports.OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$;
(function (OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$) {
    /** @deprecated use `OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$inboundSchema` instead. */
    OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$.inboundSchema = exports.OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$inboundSchema;
    /** @deprecated use `OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$outboundSchema` instead. */
    OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$.outboundSchema = exports.OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$outboundSchema;
})(OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$ || (exports.OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$ = OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$ = {}));
/** @internal */
exports.OAuth2ClientConfigurationUpdateGrantTypes$inboundSchema = z
    .nativeEnum(exports.OAuth2ClientConfigurationUpdateGrantTypes);
/** @internal */
exports.OAuth2ClientConfigurationUpdateGrantTypes$outboundSchema = exports.OAuth2ClientConfigurationUpdateGrantTypes$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OAuth2ClientConfigurationUpdateGrantTypes$;
(function (OAuth2ClientConfigurationUpdateGrantTypes$) {
    /** @deprecated use `OAuth2ClientConfigurationUpdateGrantTypes$inboundSchema` instead. */
    OAuth2ClientConfigurationUpdateGrantTypes$.inboundSchema = exports.OAuth2ClientConfigurationUpdateGrantTypes$inboundSchema;
    /** @deprecated use `OAuth2ClientConfigurationUpdateGrantTypes$outboundSchema` instead. */
    OAuth2ClientConfigurationUpdateGrantTypes$.outboundSchema = exports.OAuth2ClientConfigurationUpdateGrantTypes$outboundSchema;
})(OAuth2ClientConfigurationUpdateGrantTypes$ || (exports.OAuth2ClientConfigurationUpdateGrantTypes$ = OAuth2ClientConfigurationUpdateGrantTypes$ = {}));
/** @internal */
exports.OAuth2ClientConfigurationUpdateResponseTypes$inboundSchema = z
    .nativeEnum(exports.OAuth2ClientConfigurationUpdateResponseTypes);
/** @internal */
exports.OAuth2ClientConfigurationUpdateResponseTypes$outboundSchema = exports.OAuth2ClientConfigurationUpdateResponseTypes$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OAuth2ClientConfigurationUpdateResponseTypes$;
(function (OAuth2ClientConfigurationUpdateResponseTypes$) {
    /** @deprecated use `OAuth2ClientConfigurationUpdateResponseTypes$inboundSchema` instead. */
    OAuth2ClientConfigurationUpdateResponseTypes$.inboundSchema = exports.OAuth2ClientConfigurationUpdateResponseTypes$inboundSchema;
    /** @deprecated use `OAuth2ClientConfigurationUpdateResponseTypes$outboundSchema` instead. */
    OAuth2ClientConfigurationUpdateResponseTypes$.outboundSchema = exports.OAuth2ClientConfigurationUpdateResponseTypes$outboundSchema;
})(OAuth2ClientConfigurationUpdateResponseTypes$ || (exports.OAuth2ClientConfigurationUpdateResponseTypes$ = OAuth2ClientConfigurationUpdateResponseTypes$ = {}));
/** @internal */
exports.OAuth2ClientConfigurationUpdate$inboundSchema = z.object({
    redirect_uris: z.array(z.string()),
    token_endpoint_auth_method: exports.OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$inboundSchema
        .default("client_secret_post"),
    grant_types: z.array(exports.OAuth2ClientConfigurationUpdateGrantTypes$inboundSchema)
        .optional(),
    response_types: z.array(exports.OAuth2ClientConfigurationUpdateResponseTypes$inboundSchema).optional(),
    scope: z.string().default("openid profile email user:read organizations:read organizations:write checkout_links:read checkout_links:write checkouts:read checkouts:write products:read products:write benefits:read benefits:write files:read files:write subscriptions:read subscriptions:write orders:read metrics:read articles:read articles:write webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write user:benefits:read user:orders:read user:subscriptions:read user:subscriptions:write user:downloadables:read user:license_keys:read user:advertisement_campaigns:read user:advertisement_campaigns:write"),
    client_name: z.string(),
    client_uri: z.nullable(z.string()).optional(),
    logo_uri: z.nullable(z.string()).optional(),
    tos_uri: z.nullable(z.string()).optional(),
    policy_uri: z.nullable(z.string()).optional(),
    client_id: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "redirect_uris": "redirectUris",
        "token_endpoint_auth_method": "tokenEndpointAuthMethod",
        "grant_types": "grantTypes",
        "response_types": "responseTypes",
        "client_name": "clientName",
        "client_uri": "clientUri",
        "logo_uri": "logoUri",
        "tos_uri": "tosUri",
        "policy_uri": "policyUri",
        "client_id": "clientId",
    });
});
/** @internal */
exports.OAuth2ClientConfigurationUpdate$outboundSchema = z.object({
    redirectUris: z.array(z.string()),
    tokenEndpointAuthMethod: exports.OAuth2ClientConfigurationUpdateTokenEndpointAuthMethod$outboundSchema
        .default("client_secret_post"),
    grantTypes: z.array(exports.OAuth2ClientConfigurationUpdateGrantTypes$outboundSchema)
        .optional(),
    responseTypes: z.array(exports.OAuth2ClientConfigurationUpdateResponseTypes$outboundSchema).optional(),
    scope: z.string().default("openid profile email user:read organizations:read organizations:write checkout_links:read checkout_links:write checkouts:read checkouts:write products:read products:write benefits:read benefits:write files:read files:write subscriptions:read subscriptions:write orders:read metrics:read articles:read articles:write webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write user:benefits:read user:orders:read user:subscriptions:read user:subscriptions:write user:downloadables:read user:license_keys:read user:advertisement_campaigns:read user:advertisement_campaigns:write"),
    clientName: z.string(),
    clientUri: z.nullable(z.string()).optional(),
    logoUri: z.nullable(z.string()).optional(),
    tosUri: z.nullable(z.string()).optional(),
    policyUri: z.nullable(z.string()).optional(),
    clientId: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        redirectUris: "redirect_uris",
        tokenEndpointAuthMethod: "token_endpoint_auth_method",
        grantTypes: "grant_types",
        responseTypes: "response_types",
        clientName: "client_name",
        clientUri: "client_uri",
        logoUri: "logo_uri",
        tosUri: "tos_uri",
        policyUri: "policy_uri",
        clientId: "client_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OAuth2ClientConfigurationUpdate$;
(function (OAuth2ClientConfigurationUpdate$) {
    /** @deprecated use `OAuth2ClientConfigurationUpdate$inboundSchema` instead. */
    OAuth2ClientConfigurationUpdate$.inboundSchema = exports.OAuth2ClientConfigurationUpdate$inboundSchema;
    /** @deprecated use `OAuth2ClientConfigurationUpdate$outboundSchema` instead. */
    OAuth2ClientConfigurationUpdate$.outboundSchema = exports.OAuth2ClientConfigurationUpdate$outboundSchema;
})(OAuth2ClientConfigurationUpdate$ || (exports.OAuth2ClientConfigurationUpdate$ = OAuth2ClientConfigurationUpdate$ = {}));
//# sourceMappingURL=oauth2clientconfigurationupdate.js.map