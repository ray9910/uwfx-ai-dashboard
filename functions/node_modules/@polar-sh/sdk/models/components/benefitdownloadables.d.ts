import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BenefitDownloadablesProperties, BenefitDownloadablesProperties$Outbound } from "./benefitdownloadablesproperties.js";
export declare const BenefitDownloadablesType: {
    readonly Downloadables: "downloadables";
};
export type BenefitDownloadablesType = ClosedEnum<typeof BenefitDownloadablesType>;
export type BenefitDownloadables = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the benefit.
     */
    id: string;
    type?: "downloadables" | undefined;
    /**
     * The description of the benefit.
     */
    description: string;
    /**
     * Whether the benefit is selectable when creating a product.
     */
    selectable: boolean;
    /**
     * Whether the benefit is deletable.
     */
    deletable: boolean;
    /**
     * The ID of the organization owning the benefit.
     */
    organizationId: string;
    properties: BenefitDownloadablesProperties;
};
/** @internal */
export declare const BenefitDownloadablesType$inboundSchema: z.ZodNativeEnum<typeof BenefitDownloadablesType>;
/** @internal */
export declare const BenefitDownloadablesType$outboundSchema: z.ZodNativeEnum<typeof BenefitDownloadablesType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitDownloadablesType$ {
    /** @deprecated use `BenefitDownloadablesType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Downloadables: "downloadables";
    }>;
    /** @deprecated use `BenefitDownloadablesType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Downloadables: "downloadables";
    }>;
}
/** @internal */
export declare const BenefitDownloadables$inboundSchema: z.ZodType<BenefitDownloadables, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitDownloadables$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    type: "downloadables";
    description: string;
    selectable: boolean;
    deletable: boolean;
    organization_id: string;
    properties: BenefitDownloadablesProperties$Outbound;
};
/** @internal */
export declare const BenefitDownloadables$outboundSchema: z.ZodType<BenefitDownloadables$Outbound, z.ZodTypeDef, BenefitDownloadables>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitDownloadables$ {
    /** @deprecated use `BenefitDownloadables$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitDownloadables, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitDownloadables$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitDownloadables$Outbound, z.ZodTypeDef, BenefitDownloadables>;
    /** @deprecated use `BenefitDownloadables$Outbound` instead. */
    type Outbound = BenefitDownloadables$Outbound;
}
//# sourceMappingURL=benefitdownloadables.d.ts.map