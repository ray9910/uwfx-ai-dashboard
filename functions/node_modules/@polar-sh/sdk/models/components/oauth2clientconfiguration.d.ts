import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
export declare const OAuth2ClientConfigurationTokenEndpointAuthMethod: {
    readonly ClientSecretBasic: "client_secret_basic";
    readonly ClientSecretPost: "client_secret_post";
    readonly None: "none";
};
export type OAuth2ClientConfigurationTokenEndpointAuthMethod = ClosedEnum<typeof OAuth2ClientConfigurationTokenEndpointAuthMethod>;
export declare const OAuth2ClientConfigurationGrantTypes: {
    readonly AuthorizationCode: "authorization_code";
    readonly RefreshToken: "refresh_token";
};
export type OAuth2ClientConfigurationGrantTypes = ClosedEnum<typeof OAuth2ClientConfigurationGrantTypes>;
export declare const OAuth2ClientConfigurationResponseTypes: {
    readonly Code: "code";
};
export type OAuth2ClientConfigurationResponseTypes = ClosedEnum<typeof OAuth2ClientConfigurationResponseTypes>;
export type OAuth2ClientConfiguration = {
    redirectUris: Array<string>;
    tokenEndpointAuthMethod?: OAuth2ClientConfigurationTokenEndpointAuthMethod | undefined;
    grantTypes?: Array<OAuth2ClientConfigurationGrantTypes> | undefined;
    responseTypes?: Array<OAuth2ClientConfigurationResponseTypes> | undefined;
    scope?: string | undefined;
    clientName: string;
    clientUri?: string | null | undefined;
    logoUri?: string | null | undefined;
    tosUri?: string | null | undefined;
    policyUri?: string | null | undefined;
};
/** @internal */
export declare const OAuth2ClientConfigurationTokenEndpointAuthMethod$inboundSchema: z.ZodNativeEnum<typeof OAuth2ClientConfigurationTokenEndpointAuthMethod>;
/** @internal */
export declare const OAuth2ClientConfigurationTokenEndpointAuthMethod$outboundSchema: z.ZodNativeEnum<typeof OAuth2ClientConfigurationTokenEndpointAuthMethod>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OAuth2ClientConfigurationTokenEndpointAuthMethod$ {
    /** @deprecated use `OAuth2ClientConfigurationTokenEndpointAuthMethod$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly ClientSecretBasic: "client_secret_basic";
        readonly ClientSecretPost: "client_secret_post";
        readonly None: "none";
    }>;
    /** @deprecated use `OAuth2ClientConfigurationTokenEndpointAuthMethod$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly ClientSecretBasic: "client_secret_basic";
        readonly ClientSecretPost: "client_secret_post";
        readonly None: "none";
    }>;
}
/** @internal */
export declare const OAuth2ClientConfigurationGrantTypes$inboundSchema: z.ZodNativeEnum<typeof OAuth2ClientConfigurationGrantTypes>;
/** @internal */
export declare const OAuth2ClientConfigurationGrantTypes$outboundSchema: z.ZodNativeEnum<typeof OAuth2ClientConfigurationGrantTypes>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OAuth2ClientConfigurationGrantTypes$ {
    /** @deprecated use `OAuth2ClientConfigurationGrantTypes$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly AuthorizationCode: "authorization_code";
        readonly RefreshToken: "refresh_token";
    }>;
    /** @deprecated use `OAuth2ClientConfigurationGrantTypes$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly AuthorizationCode: "authorization_code";
        readonly RefreshToken: "refresh_token";
    }>;
}
/** @internal */
export declare const OAuth2ClientConfigurationResponseTypes$inboundSchema: z.ZodNativeEnum<typeof OAuth2ClientConfigurationResponseTypes>;
/** @internal */
export declare const OAuth2ClientConfigurationResponseTypes$outboundSchema: z.ZodNativeEnum<typeof OAuth2ClientConfigurationResponseTypes>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OAuth2ClientConfigurationResponseTypes$ {
    /** @deprecated use `OAuth2ClientConfigurationResponseTypes$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Code: "code";
    }>;
    /** @deprecated use `OAuth2ClientConfigurationResponseTypes$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Code: "code";
    }>;
}
/** @internal */
export declare const OAuth2ClientConfiguration$inboundSchema: z.ZodType<OAuth2ClientConfiguration, z.ZodTypeDef, unknown>;
/** @internal */
export type OAuth2ClientConfiguration$Outbound = {
    redirect_uris: Array<string>;
    token_endpoint_auth_method: string;
    grant_types?: Array<string> | undefined;
    response_types?: Array<string> | undefined;
    scope: string;
    client_name: string;
    client_uri?: string | null | undefined;
    logo_uri?: string | null | undefined;
    tos_uri?: string | null | undefined;
    policy_uri?: string | null | undefined;
};
/** @internal */
export declare const OAuth2ClientConfiguration$outboundSchema: z.ZodType<OAuth2ClientConfiguration$Outbound, z.ZodTypeDef, OAuth2ClientConfiguration>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OAuth2ClientConfiguration$ {
    /** @deprecated use `OAuth2ClientConfiguration$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OAuth2ClientConfiguration, z.ZodTypeDef, unknown>;
    /** @deprecated use `OAuth2ClientConfiguration$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OAuth2ClientConfiguration$Outbound, z.ZodTypeDef, OAuth2ClientConfiguration>;
    /** @deprecated use `OAuth2ClientConfiguration$Outbound` instead. */
    type Outbound = OAuth2ClientConfiguration$Outbound;
}
//# sourceMappingURL=oauth2clientconfiguration.d.ts.map