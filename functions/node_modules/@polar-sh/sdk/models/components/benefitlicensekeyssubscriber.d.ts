import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BenefitGrantLicenseKeys, BenefitGrantLicenseKeys$Outbound } from "./benefitgrantlicensekeys.js";
import { BenefitLicenseKeysSubscriberProperties, BenefitLicenseKeysSubscriberProperties$Outbound } from "./benefitlicensekeyssubscriberproperties.js";
export declare const BenefitLicenseKeysSubscriberType: {
    readonly LicenseKeys: "license_keys";
};
export type BenefitLicenseKeysSubscriberType = ClosedEnum<typeof BenefitLicenseKeysSubscriberType>;
export type BenefitLicenseKeysSubscriber = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the benefit.
     */
    id: string;
    type?: "license_keys" | undefined;
    /**
     * The description of the benefit.
     */
    description: string;
    /**
     * Whether the benefit is selectable when creating a product.
     */
    selectable: boolean;
    /**
     * Whether the benefit is deletable.
     */
    deletable: boolean;
    /**
     * The ID of the organization owning the benefit.
     */
    organizationId: string;
    properties: BenefitLicenseKeysSubscriberProperties;
    grants: Array<BenefitGrantLicenseKeys>;
};
/** @internal */
export declare const BenefitLicenseKeysSubscriberType$inboundSchema: z.ZodNativeEnum<typeof BenefitLicenseKeysSubscriberType>;
/** @internal */
export declare const BenefitLicenseKeysSubscriberType$outboundSchema: z.ZodNativeEnum<typeof BenefitLicenseKeysSubscriberType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitLicenseKeysSubscriberType$ {
    /** @deprecated use `BenefitLicenseKeysSubscriberType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly LicenseKeys: "license_keys";
    }>;
    /** @deprecated use `BenefitLicenseKeysSubscriberType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly LicenseKeys: "license_keys";
    }>;
}
/** @internal */
export declare const BenefitLicenseKeysSubscriber$inboundSchema: z.ZodType<BenefitLicenseKeysSubscriber, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitLicenseKeysSubscriber$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    type: "license_keys";
    description: string;
    selectable: boolean;
    deletable: boolean;
    organization_id: string;
    properties: BenefitLicenseKeysSubscriberProperties$Outbound;
    grants: Array<BenefitGrantLicenseKeys$Outbound>;
};
/** @internal */
export declare const BenefitLicenseKeysSubscriber$outboundSchema: z.ZodType<BenefitLicenseKeysSubscriber$Outbound, z.ZodTypeDef, BenefitLicenseKeysSubscriber>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitLicenseKeysSubscriber$ {
    /** @deprecated use `BenefitLicenseKeysSubscriber$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitLicenseKeysSubscriber, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitLicenseKeysSubscriber$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitLicenseKeysSubscriber$Outbound, z.ZodTypeDef, BenefitLicenseKeysSubscriber>;
    /** @deprecated use `BenefitLicenseKeysSubscriber$Outbound` instead. */
    type Outbound = BenefitLicenseKeysSubscriber$Outbound;
}
//# sourceMappingURL=benefitlicensekeyssubscriber.d.ts.map