"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Metrics$ = exports.Metrics$outboundSchema = exports.Metrics$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const metric_js_1 = require("./metric.js");
/** @internal */
exports.Metrics$inboundSchema = z.object({
    orders: metric_js_1.Metric$inboundSchema,
    revenue: metric_js_1.Metric$inboundSchema,
    average_order_value: metric_js_1.Metric$inboundSchema,
    one_time_products: metric_js_1.Metric$inboundSchema,
    one_time_products_revenue: metric_js_1.Metric$inboundSchema,
    new_subscriptions: metric_js_1.Metric$inboundSchema,
    new_subscriptions_revenue: metric_js_1.Metric$inboundSchema,
    renewed_subscriptions: metric_js_1.Metric$inboundSchema,
    renewed_subscriptions_revenue: metric_js_1.Metric$inboundSchema,
    active_subscriptions: metric_js_1.Metric$inboundSchema,
    monthly_recurring_revenue: metric_js_1.Metric$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "average_order_value": "averageOrderValue",
        "one_time_products": "oneTimeProducts",
        "one_time_products_revenue": "oneTimeProductsRevenue",
        "new_subscriptions": "newSubscriptions",
        "new_subscriptions_revenue": "newSubscriptionsRevenue",
        "renewed_subscriptions": "renewedSubscriptions",
        "renewed_subscriptions_revenue": "renewedSubscriptionsRevenue",
        "active_subscriptions": "activeSubscriptions",
        "monthly_recurring_revenue": "monthlyRecurringRevenue",
    });
});
/** @internal */
exports.Metrics$outboundSchema = z.object({
    orders: metric_js_1.Metric$outboundSchema,
    revenue: metric_js_1.Metric$outboundSchema,
    averageOrderValue: metric_js_1.Metric$outboundSchema,
    oneTimeProducts: metric_js_1.Metric$outboundSchema,
    oneTimeProductsRevenue: metric_js_1.Metric$outboundSchema,
    newSubscriptions: metric_js_1.Metric$outboundSchema,
    newSubscriptionsRevenue: metric_js_1.Metric$outboundSchema,
    renewedSubscriptions: metric_js_1.Metric$outboundSchema,
    renewedSubscriptionsRevenue: metric_js_1.Metric$outboundSchema,
    activeSubscriptions: metric_js_1.Metric$outboundSchema,
    monthlyRecurringRevenue: metric_js_1.Metric$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        averageOrderValue: "average_order_value",
        oneTimeProducts: "one_time_products",
        oneTimeProductsRevenue: "one_time_products_revenue",
        newSubscriptions: "new_subscriptions",
        newSubscriptionsRevenue: "new_subscriptions_revenue",
        renewedSubscriptions: "renewed_subscriptions",
        renewedSubscriptionsRevenue: "renewed_subscriptions_revenue",
        activeSubscriptions: "active_subscriptions",
        monthlyRecurringRevenue: "monthly_recurring_revenue",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Metrics$;
(function (Metrics$) {
    /** @deprecated use `Metrics$inboundSchema` instead. */
    Metrics$.inboundSchema = exports.Metrics$inboundSchema;
    /** @deprecated use `Metrics$outboundSchema` instead. */
    Metrics$.outboundSchema = exports.Metrics$outboundSchema;
})(Metrics$ || (exports.Metrics$ = Metrics$ = {}));
//# sourceMappingURL=metrics.js.map