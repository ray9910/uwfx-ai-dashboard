import * as z from "zod";
import { ArticleVisibility } from "./articlevisibility.js";
import { BylineProfile, BylineProfile$Outbound } from "./bylineprofile.js";
import { Organization, Organization$Outbound } from "./organization.js";
export type Article = {
    id: string;
    slug: string;
    title: string;
    body: string;
    byline: BylineProfile;
    visibility: ArticleVisibility;
    userId: string | null;
    organizationId: string;
    organization: Organization;
    publishedAt: Date | null;
    paidSubscribersOnly: boolean | null;
    paidSubscribersOnlyEndsAt: Date | null;
    isPreview: boolean;
    isPinned: boolean;
    notifySubscribers: boolean | null;
    notificationsSentAt: Date | null;
    emailSentToCount: number | null;
    ogImageUrl: string | null;
    ogDescription: string | null;
};
/** @internal */
export declare const Article$inboundSchema: z.ZodType<Article, z.ZodTypeDef, unknown>;
/** @internal */
export type Article$Outbound = {
    id: string;
    slug: string;
    title: string;
    body: string;
    byline: BylineProfile$Outbound;
    visibility: string;
    user_id: string | null;
    organization_id: string;
    organization: Organization$Outbound;
    published_at: string | null;
    paid_subscribers_only: boolean | null;
    paid_subscribers_only_ends_at: string | null;
    is_preview: boolean;
    is_pinned: boolean;
    notify_subscribers: boolean | null;
    notifications_sent_at: string | null;
    email_sent_to_count: number | null;
    og_image_url: string | null;
    og_description: string | null;
};
/** @internal */
export declare const Article$outboundSchema: z.ZodType<Article$Outbound, z.ZodTypeDef, Article>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Article$ {
    /** @deprecated use `Article$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Article, z.ZodTypeDef, unknown>;
    /** @deprecated use `Article$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Article$Outbound, z.ZodTypeDef, Article>;
    /** @deprecated use `Article$Outbound` instead. */
    type Outbound = Article$Outbound;
}
//# sourceMappingURL=article.d.ts.map