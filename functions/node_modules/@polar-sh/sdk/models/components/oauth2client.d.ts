import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
export declare const TokenEndpointAuthMethod: {
    readonly ClientSecretBasic: "client_secret_basic";
    readonly ClientSecretPost: "client_secret_post";
    readonly None: "none";
};
export type TokenEndpointAuthMethod = ClosedEnum<typeof TokenEndpointAuthMethod>;
export declare const GrantTypes: {
    readonly AuthorizationCode: "authorization_code";
    readonly RefreshToken: "refresh_token";
};
export type GrantTypes = ClosedEnum<typeof GrantTypes>;
export declare const ResponseTypes: {
    readonly Code: "code";
};
export type ResponseTypes = ClosedEnum<typeof ResponseTypes>;
export type OAuth2Client = {
    redirectUris: Array<string>;
    tokenEndpointAuthMethod?: TokenEndpointAuthMethod | undefined;
    grantTypes?: Array<GrantTypes> | undefined;
    responseTypes?: Array<ResponseTypes> | undefined;
    scope?: string | undefined;
    clientName: string;
    clientUri?: string | null | undefined;
    logoUri?: string | null | undefined;
    tosUri?: string | null | undefined;
    policyUri?: string | null | undefined;
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    clientId: string;
    clientSecret: string;
    clientIdIssuedAt: number;
    clientSecretExpiresAt: number;
};
/** @internal */
export declare const TokenEndpointAuthMethod$inboundSchema: z.ZodNativeEnum<typeof TokenEndpointAuthMethod>;
/** @internal */
export declare const TokenEndpointAuthMethod$outboundSchema: z.ZodNativeEnum<typeof TokenEndpointAuthMethod>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace TokenEndpointAuthMethod$ {
    /** @deprecated use `TokenEndpointAuthMethod$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly ClientSecretBasic: "client_secret_basic";
        readonly ClientSecretPost: "client_secret_post";
        readonly None: "none";
    }>;
    /** @deprecated use `TokenEndpointAuthMethod$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly ClientSecretBasic: "client_secret_basic";
        readonly ClientSecretPost: "client_secret_post";
        readonly None: "none";
    }>;
}
/** @internal */
export declare const GrantTypes$inboundSchema: z.ZodNativeEnum<typeof GrantTypes>;
/** @internal */
export declare const GrantTypes$outboundSchema: z.ZodNativeEnum<typeof GrantTypes>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GrantTypes$ {
    /** @deprecated use `GrantTypes$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly AuthorizationCode: "authorization_code";
        readonly RefreshToken: "refresh_token";
    }>;
    /** @deprecated use `GrantTypes$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly AuthorizationCode: "authorization_code";
        readonly RefreshToken: "refresh_token";
    }>;
}
/** @internal */
export declare const ResponseTypes$inboundSchema: z.ZodNativeEnum<typeof ResponseTypes>;
/** @internal */
export declare const ResponseTypes$outboundSchema: z.ZodNativeEnum<typeof ResponseTypes>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ResponseTypes$ {
    /** @deprecated use `ResponseTypes$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Code: "code";
    }>;
    /** @deprecated use `ResponseTypes$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Code: "code";
    }>;
}
/** @internal */
export declare const OAuth2Client$inboundSchema: z.ZodType<OAuth2Client, z.ZodTypeDef, unknown>;
/** @internal */
export type OAuth2Client$Outbound = {
    redirect_uris: Array<string>;
    token_endpoint_auth_method: string;
    grant_types?: Array<string> | undefined;
    response_types?: Array<string> | undefined;
    scope: string;
    client_name: string;
    client_uri?: string | null | undefined;
    logo_uri?: string | null | undefined;
    tos_uri?: string | null | undefined;
    policy_uri?: string | null | undefined;
    created_at: string;
    modified_at: string | null;
    client_id: string;
    client_secret: string;
    client_id_issued_at: number;
    client_secret_expires_at: number;
};
/** @internal */
export declare const OAuth2Client$outboundSchema: z.ZodType<OAuth2Client$Outbound, z.ZodTypeDef, OAuth2Client>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OAuth2Client$ {
    /** @deprecated use `OAuth2Client$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OAuth2Client, z.ZodTypeDef, unknown>;
    /** @deprecated use `OAuth2Client$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OAuth2Client$Outbound, z.ZodTypeDef, OAuth2Client>;
    /** @deprecated use `OAuth2Client$Outbound` instead. */
    type Outbound = OAuth2Client$Outbound;
}
//# sourceMappingURL=oauth2client.d.ts.map