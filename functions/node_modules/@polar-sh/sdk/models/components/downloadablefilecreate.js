"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DownloadableFileCreate$ = exports.DownloadableFileCreate$outboundSchema = exports.DownloadableFileCreate$inboundSchema = exports.DownloadableFileCreateService$ = exports.DownloadableFileCreateService$outboundSchema = exports.DownloadableFileCreateService$inboundSchema = exports.DownloadableFileCreateService = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const s3filecreatemultipart_js_1 = require("./s3filecreatemultipart.js");
exports.DownloadableFileCreateService = {
    Downloadable: "downloadable",
};
/** @internal */
exports.DownloadableFileCreateService$inboundSchema = z.nativeEnum(exports.DownloadableFileCreateService);
/** @internal */
exports.DownloadableFileCreateService$outboundSchema = exports.DownloadableFileCreateService$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DownloadableFileCreateService$;
(function (DownloadableFileCreateService$) {
    /** @deprecated use `DownloadableFileCreateService$inboundSchema` instead. */
    DownloadableFileCreateService$.inboundSchema = exports.DownloadableFileCreateService$inboundSchema;
    /** @deprecated use `DownloadableFileCreateService$outboundSchema` instead. */
    DownloadableFileCreateService$.outboundSchema = exports.DownloadableFileCreateService$outboundSchema;
})(DownloadableFileCreateService$ || (exports.DownloadableFileCreateService$ = DownloadableFileCreateService$ = {}));
/** @internal */
exports.DownloadableFileCreate$inboundSchema = z.object({
    organization_id: z.nullable(z.string()).optional(),
    name: z.string(),
    mime_type: z.string(),
    size: z.number().int(),
    checksum_sha256_base64: z.nullable(z.string()).optional(),
    upload: s3filecreatemultipart_js_1.S3FileCreateMultipart$inboundSchema,
    service: z.literal("downloadable").optional(),
    version: z.nullable(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
        "mime_type": "mimeType",
        "checksum_sha256_base64": "checksumSha256Base64",
    });
});
/** @internal */
exports.DownloadableFileCreate$outboundSchema = z.object({
    organizationId: z.nullable(z.string()).optional(),
    name: z.string(),
    mimeType: z.string(),
    size: z.number().int(),
    checksumSha256Base64: z.nullable(z.string()).optional(),
    upload: s3filecreatemultipart_js_1.S3FileCreateMultipart$outboundSchema,
    service: z.literal("downloadable").default("downloadable"),
    version: z.nullable(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
        mimeType: "mime_type",
        checksumSha256Base64: "checksum_sha256_base64",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DownloadableFileCreate$;
(function (DownloadableFileCreate$) {
    /** @deprecated use `DownloadableFileCreate$inboundSchema` instead. */
    DownloadableFileCreate$.inboundSchema = exports.DownloadableFileCreate$inboundSchema;
    /** @deprecated use `DownloadableFileCreate$outboundSchema` instead. */
    DownloadableFileCreate$.outboundSchema = exports.DownloadableFileCreate$outboundSchema;
})(DownloadableFileCreate$ || (exports.DownloadableFileCreate$ = DownloadableFileCreate$ = {}));
//# sourceMappingURL=downloadablefilecreate.js.map