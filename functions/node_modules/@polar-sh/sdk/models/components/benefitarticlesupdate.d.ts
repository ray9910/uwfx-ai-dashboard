import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
export declare const BenefitArticlesUpdateType: {
    readonly Articles: "articles";
};
export type BenefitArticlesUpdateType = ClosedEnum<typeof BenefitArticlesUpdateType>;
export type BenefitArticlesUpdate = {
    /**
     * The description of the benefit. Will be displayed on products having this benefit.
     */
    description?: string | null | undefined;
    type?: "articles" | undefined;
};
/** @internal */
export declare const BenefitArticlesUpdateType$inboundSchema: z.ZodNativeEnum<typeof BenefitArticlesUpdateType>;
/** @internal */
export declare const BenefitArticlesUpdateType$outboundSchema: z.ZodNativeEnum<typeof BenefitArticlesUpdateType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitArticlesUpdateType$ {
    /** @deprecated use `BenefitArticlesUpdateType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Articles: "articles";
    }>;
    /** @deprecated use `BenefitArticlesUpdateType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Articles: "articles";
    }>;
}
/** @internal */
export declare const BenefitArticlesUpdate$inboundSchema: z.ZodType<BenefitArticlesUpdate, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitArticlesUpdate$Outbound = {
    description?: string | null | undefined;
    type: "articles";
};
/** @internal */
export declare const BenefitArticlesUpdate$outboundSchema: z.ZodType<BenefitArticlesUpdate$Outbound, z.ZodTypeDef, BenefitArticlesUpdate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitArticlesUpdate$ {
    /** @deprecated use `BenefitArticlesUpdate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitArticlesUpdate, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitArticlesUpdate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitArticlesUpdate$Outbound, z.ZodTypeDef, BenefitArticlesUpdate>;
    /** @deprecated use `BenefitArticlesUpdate$Outbound` instead. */
    type Outbound = BenefitArticlesUpdate$Outbound;
}
//# sourceMappingURL=benefitarticlesupdate.d.ts.map