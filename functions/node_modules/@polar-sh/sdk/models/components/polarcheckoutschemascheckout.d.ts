import * as z from "zod";
import { Address, Address$Outbound } from "./address.js";
import { CheckoutStatus } from "./checkoutstatus.js";
import { Product, Product$Outbound, ProductInput, ProductInput$Outbound } from "./product.js";
import { ProductPrice, ProductPrice$Outbound } from "./productprice.js";
export type PaymentProcessorMetadata = {};
/**
 * Checkout session data retrieved using an access token.
 */
export type PolarCheckoutSchemasCheckout = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the object.
     */
    id: string;
    paymentProcessor?: "stripe" | undefined;
    status: CheckoutStatus;
    /**
     * Client secret used to update and complete the checkout session from the client.
     */
    clientSecret: string;
    /**
     * URL where the customer can access the checkout session.
     */
    url: string;
    /**
     * Expiration date and time of the checkout session.
     */
    expiresAt: Date;
    /**
     * URL where the customer will be redirected after a successful payment.
     */
    successUrl: string;
    /**
     * When checkout is embedded, represents the Origin of the page embedding the checkout. Used as a security measure to send messages only to the embedding page.
     */
    embedOrigin: string | null;
    amount: number | null;
    /**
     * Computed tax amount to pay in cents.
     */
    taxAmount: number | null;
    /**
     * Currency code of the checkout session.
     */
    currency: string | null;
    /**
     * Total amount to pay in cents.
     */
    totalAmount: number | null;
    /**
     * ID of the product to checkout.
     */
    productId: string;
    /**
     * ID of the product price to checkout.
     */
    productPriceId: string;
    /**
     * Whether the checkout requires payment. Useful to detect free products.
     */
    isPaymentRequired: boolean;
    customerId: string | null;
    customerName: string | null;
    customerEmail: string | null;
    customerIpAddress: string | null;
    customerBillingAddress: Address | null;
    customerTaxId: string | null;
    paymentProcessorMetadata: PaymentProcessorMetadata;
    metadata: {
        [k: string]: string;
    };
    /**
     * A product.
     */
    product: Product;
    productPrice: ProductPrice;
};
/**
 * Checkout session data retrieved using an access token.
 */
export type PolarCheckoutSchemasCheckoutInput = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the object.
     */
    id: string;
    paymentProcessor?: "stripe" | undefined;
    status: CheckoutStatus;
    /**
     * Client secret used to update and complete the checkout session from the client.
     */
    clientSecret: string;
    /**
     * URL where the customer can access the checkout session.
     */
    url: string;
    /**
     * Expiration date and time of the checkout session.
     */
    expiresAt: Date;
    /**
     * URL where the customer will be redirected after a successful payment.
     */
    successUrl: string;
    /**
     * When checkout is embedded, represents the Origin of the page embedding the checkout. Used as a security measure to send messages only to the embedding page.
     */
    embedOrigin: string | null;
    amount: number | null;
    /**
     * Computed tax amount to pay in cents.
     */
    taxAmount: number | null;
    /**
     * Currency code of the checkout session.
     */
    currency: string | null;
    /**
     * Total amount to pay in cents.
     */
    totalAmount: number | null;
    /**
     * ID of the product to checkout.
     */
    productId: string;
    /**
     * ID of the product price to checkout.
     */
    productPriceId: string;
    /**
     * Whether the checkout requires payment. Useful to detect free products.
     */
    isPaymentRequired: boolean;
    customerId: string | null;
    customerName: string | null;
    customerEmail: string | null;
    customerIpAddress: string | null;
    customerBillingAddress: Address | null;
    customerTaxId: string | null;
    paymentProcessorMetadata: PaymentProcessorMetadata;
    metadata: {
        [k: string]: string;
    };
    /**
     * A product.
     */
    product: ProductInput;
    productPrice: ProductPrice;
};
/** @internal */
export declare const PaymentProcessorMetadata$inboundSchema: z.ZodType<PaymentProcessorMetadata, z.ZodTypeDef, unknown>;
/** @internal */
export type PaymentProcessorMetadata$Outbound = {};
/** @internal */
export declare const PaymentProcessorMetadata$outboundSchema: z.ZodType<PaymentProcessorMetadata$Outbound, z.ZodTypeDef, PaymentProcessorMetadata>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PaymentProcessorMetadata$ {
    /** @deprecated use `PaymentProcessorMetadata$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PaymentProcessorMetadata, z.ZodTypeDef, unknown>;
    /** @deprecated use `PaymentProcessorMetadata$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PaymentProcessorMetadata$Outbound, z.ZodTypeDef, PaymentProcessorMetadata>;
    /** @deprecated use `PaymentProcessorMetadata$Outbound` instead. */
    type Outbound = PaymentProcessorMetadata$Outbound;
}
/** @internal */
export declare const PolarCheckoutSchemasCheckout$inboundSchema: z.ZodType<PolarCheckoutSchemasCheckout, z.ZodTypeDef, unknown>;
/** @internal */
export type PolarCheckoutSchemasCheckout$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    payment_processor: "stripe";
    status: string;
    client_secret: string;
    url: string;
    expires_at: string;
    success_url: string;
    embed_origin: string | null;
    amount: number | null;
    tax_amount: number | null;
    currency: string | null;
    total_amount: number | null;
    product_id: string;
    product_price_id: string;
    is_payment_required: boolean;
    customer_id: string | null;
    customer_name: string | null;
    customer_email: string | null;
    customer_ip_address: string | null;
    customer_billing_address: Address$Outbound | null;
    customer_tax_id: string | null;
    payment_processor_metadata: PaymentProcessorMetadata$Outbound;
    metadata: {
        [k: string]: string;
    };
    product: Product$Outbound;
    product_price: ProductPrice$Outbound;
};
/** @internal */
export declare const PolarCheckoutSchemasCheckout$outboundSchema: z.ZodType<PolarCheckoutSchemasCheckout$Outbound, z.ZodTypeDef, PolarCheckoutSchemasCheckout>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PolarCheckoutSchemasCheckout$ {
    /** @deprecated use `PolarCheckoutSchemasCheckout$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PolarCheckoutSchemasCheckout, z.ZodTypeDef, unknown>;
    /** @deprecated use `PolarCheckoutSchemasCheckout$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PolarCheckoutSchemasCheckout$Outbound, z.ZodTypeDef, PolarCheckoutSchemasCheckout>;
    /** @deprecated use `PolarCheckoutSchemasCheckout$Outbound` instead. */
    type Outbound = PolarCheckoutSchemasCheckout$Outbound;
}
/** @internal */
export declare const PolarCheckoutSchemasCheckoutInput$inboundSchema: z.ZodType<PolarCheckoutSchemasCheckoutInput, z.ZodTypeDef, unknown>;
/** @internal */
export type PolarCheckoutSchemasCheckoutInput$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    payment_processor: "stripe";
    status: string;
    client_secret: string;
    url: string;
    expires_at: string;
    success_url: string;
    embed_origin: string | null;
    amount: number | null;
    tax_amount: number | null;
    currency: string | null;
    total_amount: number | null;
    product_id: string;
    product_price_id: string;
    is_payment_required: boolean;
    customer_id: string | null;
    customer_name: string | null;
    customer_email: string | null;
    customer_ip_address: string | null;
    customer_billing_address: Address$Outbound | null;
    customer_tax_id: string | null;
    payment_processor_metadata: PaymentProcessorMetadata$Outbound;
    metadata: {
        [k: string]: string;
    };
    product: ProductInput$Outbound;
    product_price: ProductPrice$Outbound;
};
/** @internal */
export declare const PolarCheckoutSchemasCheckoutInput$outboundSchema: z.ZodType<PolarCheckoutSchemasCheckoutInput$Outbound, z.ZodTypeDef, PolarCheckoutSchemasCheckoutInput>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PolarCheckoutSchemasCheckoutInput$ {
    /** @deprecated use `PolarCheckoutSchemasCheckoutInput$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PolarCheckoutSchemasCheckoutInput, z.ZodTypeDef, unknown>;
    /** @deprecated use `PolarCheckoutSchemasCheckoutInput$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PolarCheckoutSchemasCheckoutInput$Outbound, z.ZodTypeDef, PolarCheckoutSchemasCheckoutInput>;
    /** @deprecated use `PolarCheckoutSchemasCheckoutInput$Outbound` instead. */
    type Outbound = PolarCheckoutSchemasCheckoutInput$Outbound;
}
//# sourceMappingURL=polarcheckoutschemascheckout.d.ts.map