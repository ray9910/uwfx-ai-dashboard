"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OAuth2Client$ = exports.OAuth2Client$outboundSchema = exports.OAuth2Client$inboundSchema = exports.ResponseTypes$ = exports.ResponseTypes$outboundSchema = exports.ResponseTypes$inboundSchema = exports.GrantTypes$ = exports.GrantTypes$outboundSchema = exports.GrantTypes$inboundSchema = exports.TokenEndpointAuthMethod$ = exports.TokenEndpointAuthMethod$outboundSchema = exports.TokenEndpointAuthMethod$inboundSchema = exports.ResponseTypes = exports.GrantTypes = exports.TokenEndpointAuthMethod = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
exports.TokenEndpointAuthMethod = {
    ClientSecretBasic: "client_secret_basic",
    ClientSecretPost: "client_secret_post",
    None: "none",
};
exports.GrantTypes = {
    AuthorizationCode: "authorization_code",
    RefreshToken: "refresh_token",
};
exports.ResponseTypes = {
    Code: "code",
};
/** @internal */
exports.TokenEndpointAuthMethod$inboundSchema = z.nativeEnum(exports.TokenEndpointAuthMethod);
/** @internal */
exports.TokenEndpointAuthMethod$outboundSchema = exports.TokenEndpointAuthMethod$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var TokenEndpointAuthMethod$;
(function (TokenEndpointAuthMethod$) {
    /** @deprecated use `TokenEndpointAuthMethod$inboundSchema` instead. */
    TokenEndpointAuthMethod$.inboundSchema = exports.TokenEndpointAuthMethod$inboundSchema;
    /** @deprecated use `TokenEndpointAuthMethod$outboundSchema` instead. */
    TokenEndpointAuthMethod$.outboundSchema = exports.TokenEndpointAuthMethod$outboundSchema;
})(TokenEndpointAuthMethod$ || (exports.TokenEndpointAuthMethod$ = TokenEndpointAuthMethod$ = {}));
/** @internal */
exports.GrantTypes$inboundSchema = z
    .nativeEnum(exports.GrantTypes);
/** @internal */
exports.GrantTypes$outboundSchema = exports.GrantTypes$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GrantTypes$;
(function (GrantTypes$) {
    /** @deprecated use `GrantTypes$inboundSchema` instead. */
    GrantTypes$.inboundSchema = exports.GrantTypes$inboundSchema;
    /** @deprecated use `GrantTypes$outboundSchema` instead. */
    GrantTypes$.outboundSchema = exports.GrantTypes$outboundSchema;
})(GrantTypes$ || (exports.GrantTypes$ = GrantTypes$ = {}));
/** @internal */
exports.ResponseTypes$inboundSchema = z.nativeEnum(exports.ResponseTypes);
/** @internal */
exports.ResponseTypes$outboundSchema = exports.ResponseTypes$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ResponseTypes$;
(function (ResponseTypes$) {
    /** @deprecated use `ResponseTypes$inboundSchema` instead. */
    ResponseTypes$.inboundSchema = exports.ResponseTypes$inboundSchema;
    /** @deprecated use `ResponseTypes$outboundSchema` instead. */
    ResponseTypes$.outboundSchema = exports.ResponseTypes$outboundSchema;
})(ResponseTypes$ || (exports.ResponseTypes$ = ResponseTypes$ = {}));
/** @internal */
exports.OAuth2Client$inboundSchema = z.object({
    redirect_uris: z.array(z.string()),
    token_endpoint_auth_method: exports.TokenEndpointAuthMethod$inboundSchema.default("client_secret_post"),
    grant_types: z.array(exports.GrantTypes$inboundSchema).optional(),
    response_types: z.array(exports.ResponseTypes$inboundSchema).optional(),
    scope: z.string().default("openid profile email user:read organizations:read organizations:write checkout_links:read checkout_links:write checkouts:read checkouts:write products:read products:write benefits:read benefits:write files:read files:write subscriptions:read subscriptions:write orders:read metrics:read articles:read articles:write webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write user:benefits:read user:orders:read user:subscriptions:read user:subscriptions:write user:downloadables:read user:license_keys:read user:advertisement_campaigns:read user:advertisement_campaigns:write"),
    client_name: z.string(),
    client_uri: z.nullable(z.string()).optional(),
    logo_uri: z.nullable(z.string()).optional(),
    tos_uri: z.nullable(z.string()).optional(),
    policy_uri: z.nullable(z.string()).optional(),
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    modified_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    client_id: z.string(),
    client_secret: z.string(),
    client_id_issued_at: z.number().int(),
    client_secret_expires_at: z.number().int(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "redirect_uris": "redirectUris",
        "token_endpoint_auth_method": "tokenEndpointAuthMethod",
        "grant_types": "grantTypes",
        "response_types": "responseTypes",
        "client_name": "clientName",
        "client_uri": "clientUri",
        "logo_uri": "logoUri",
        "tos_uri": "tosUri",
        "policy_uri": "policyUri",
        "created_at": "createdAt",
        "modified_at": "modifiedAt",
        "client_id": "clientId",
        "client_secret": "clientSecret",
        "client_id_issued_at": "clientIdIssuedAt",
        "client_secret_expires_at": "clientSecretExpiresAt",
    });
});
/** @internal */
exports.OAuth2Client$outboundSchema = z.object({
    redirectUris: z.array(z.string()),
    tokenEndpointAuthMethod: exports.TokenEndpointAuthMethod$outboundSchema.default("client_secret_post"),
    grantTypes: z.array(exports.GrantTypes$outboundSchema).optional(),
    responseTypes: z.array(exports.ResponseTypes$outboundSchema).optional(),
    scope: z.string().default("openid profile email user:read organizations:read organizations:write checkout_links:read checkout_links:write checkouts:read checkouts:write products:read products:write benefits:read benefits:write files:read files:write subscriptions:read subscriptions:write orders:read metrics:read articles:read articles:write webhooks:read webhooks:write external_organizations:read license_keys:read license_keys:write repositories:read repositories:write issues:read issues:write user:benefits:read user:orders:read user:subscriptions:read user:subscriptions:write user:downloadables:read user:license_keys:read user:advertisement_campaigns:read user:advertisement_campaigns:write"),
    clientName: z.string(),
    clientUri: z.nullable(z.string()).optional(),
    logoUri: z.nullable(z.string()).optional(),
    tosUri: z.nullable(z.string()).optional(),
    policyUri: z.nullable(z.string()).optional(),
    createdAt: z.date().transform(v => v.toISOString()),
    modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
    clientId: z.string(),
    clientSecret: z.string(),
    clientIdIssuedAt: z.number().int(),
    clientSecretExpiresAt: z.number().int(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        redirectUris: "redirect_uris",
        tokenEndpointAuthMethod: "token_endpoint_auth_method",
        grantTypes: "grant_types",
        responseTypes: "response_types",
        clientName: "client_name",
        clientUri: "client_uri",
        logoUri: "logo_uri",
        tosUri: "tos_uri",
        policyUri: "policy_uri",
        createdAt: "created_at",
        modifiedAt: "modified_at",
        clientId: "client_id",
        clientSecret: "client_secret",
        clientIdIssuedAt: "client_id_issued_at",
        clientSecretExpiresAt: "client_secret_expires_at",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OAuth2Client$;
(function (OAuth2Client$) {
    /** @deprecated use `OAuth2Client$inboundSchema` instead. */
    OAuth2Client$.inboundSchema = exports.OAuth2Client$inboundSchema;
    /** @deprecated use `OAuth2Client$outboundSchema` instead. */
    OAuth2Client$.outboundSchema = exports.OAuth2Client$outboundSchema;
})(OAuth2Client$ || (exports.OAuth2Client$ = OAuth2Client$ = {}));
//# sourceMappingURL=oauth2client.js.map