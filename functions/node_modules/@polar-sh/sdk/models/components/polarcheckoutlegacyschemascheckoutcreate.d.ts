import * as z from "zod";
export type PolarCheckoutLegacySchemasCheckoutCreate = {
    /**
     * ID of the product price to subscribe to.
     */
    productPriceId: string;
    /**
     * URL where the customer will be redirected after a successful subscription. You can add the `session_id={CHECKOUT_SESSION_ID}` query parameter to retrieve the checkout session id.
     */
    successUrl: string;
    /**
     * If you already know the email of your customer, you can set it. It'll be pre-filled on the checkout page.
     */
    customerEmail?: string | null | undefined;
    /**
     * ID of the subscription to update. If not provided, a new subscription will be created.
     */
    subscriptionId?: string | null | undefined;
};
/** @internal */
export declare const PolarCheckoutLegacySchemasCheckoutCreate$inboundSchema: z.ZodType<PolarCheckoutLegacySchemasCheckoutCreate, z.ZodTypeDef, unknown>;
/** @internal */
export type PolarCheckoutLegacySchemasCheckoutCreate$Outbound = {
    product_price_id: string;
    success_url: string;
    customer_email?: string | null | undefined;
    subscription_id?: string | null | undefined;
};
/** @internal */
export declare const PolarCheckoutLegacySchemasCheckoutCreate$outboundSchema: z.ZodType<PolarCheckoutLegacySchemasCheckoutCreate$Outbound, z.ZodTypeDef, PolarCheckoutLegacySchemasCheckoutCreate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PolarCheckoutLegacySchemasCheckoutCreate$ {
    /** @deprecated use `PolarCheckoutLegacySchemasCheckoutCreate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PolarCheckoutLegacySchemasCheckoutCreate, z.ZodTypeDef, unknown>;
    /** @deprecated use `PolarCheckoutLegacySchemasCheckoutCreate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PolarCheckoutLegacySchemasCheckoutCreate$Outbound, z.ZodTypeDef, PolarCheckoutLegacySchemasCheckoutCreate>;
    /** @deprecated use `PolarCheckoutLegacySchemasCheckoutCreate$Outbound` instead. */
    type Outbound = PolarCheckoutLegacySchemasCheckoutCreate$Outbound;
}
//# sourceMappingURL=polarcheckoutlegacyschemascheckoutcreate.d.ts.map