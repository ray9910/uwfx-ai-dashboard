import * as z from "zod";
import { BenefitArticles, BenefitArticles$Outbound } from "./benefitarticles.js";
import { BenefitBase, BenefitBase$Outbound } from "./benefitbase.js";
import { ProductMediaFileRead, ProductMediaFileRead$Outbound } from "./productmediafileread.js";
import { ProductPrice, ProductPrice$Outbound } from "./productprice.js";
export type UserSubscriptionProductBenefits = BenefitBase | BenefitArticles;
export type UserSubscriptionProduct = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the product.
     */
    id: string;
    /**
     * The name of the product.
     */
    name: string;
    /**
     * The description of the product.
     */
    description: string | null;
    /**
     * Whether the product is a subscription tier.
     */
    isRecurring: boolean;
    /**
     * Whether the product is archived and no longer available.
     */
    isArchived: boolean;
    /**
     * The ID of the organization owning the product.
     */
    organizationId: string;
    /**
     * List of available prices for this product.
     */
    prices: Array<ProductPrice>;
    /**
     * The benefits granted by the product.
     */
    benefits: Array<BenefitBase | BenefitArticles>;
    /**
     * The medias associated to the product.
     */
    medias: Array<ProductMediaFileRead>;
};
/** @internal */
export declare const UserSubscriptionProductBenefits$inboundSchema: z.ZodType<UserSubscriptionProductBenefits, z.ZodTypeDef, unknown>;
/** @internal */
export type UserSubscriptionProductBenefits$Outbound = BenefitBase$Outbound | BenefitArticles$Outbound;
/** @internal */
export declare const UserSubscriptionProductBenefits$outboundSchema: z.ZodType<UserSubscriptionProductBenefits$Outbound, z.ZodTypeDef, UserSubscriptionProductBenefits>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UserSubscriptionProductBenefits$ {
    /** @deprecated use `UserSubscriptionProductBenefits$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UserSubscriptionProductBenefits, z.ZodTypeDef, unknown>;
    /** @deprecated use `UserSubscriptionProductBenefits$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UserSubscriptionProductBenefits$Outbound, z.ZodTypeDef, UserSubscriptionProductBenefits>;
    /** @deprecated use `UserSubscriptionProductBenefits$Outbound` instead. */
    type Outbound = UserSubscriptionProductBenefits$Outbound;
}
/** @internal */
export declare const UserSubscriptionProduct$inboundSchema: z.ZodType<UserSubscriptionProduct, z.ZodTypeDef, unknown>;
/** @internal */
export type UserSubscriptionProduct$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    name: string;
    description: string | null;
    is_recurring: boolean;
    is_archived: boolean;
    organization_id: string;
    prices: Array<ProductPrice$Outbound>;
    benefits: Array<BenefitBase$Outbound | BenefitArticles$Outbound>;
    medias: Array<ProductMediaFileRead$Outbound>;
};
/** @internal */
export declare const UserSubscriptionProduct$outboundSchema: z.ZodType<UserSubscriptionProduct$Outbound, z.ZodTypeDef, UserSubscriptionProduct>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UserSubscriptionProduct$ {
    /** @deprecated use `UserSubscriptionProduct$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UserSubscriptionProduct, z.ZodTypeDef, unknown>;
    /** @deprecated use `UserSubscriptionProduct$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UserSubscriptionProduct$Outbound, z.ZodTypeDef, UserSubscriptionProduct>;
    /** @deprecated use `UserSubscriptionProduct$Outbound` instead. */
    type Outbound = UserSubscriptionProduct$Outbound;
}
//# sourceMappingURL=usersubscriptionproduct.d.ts.map