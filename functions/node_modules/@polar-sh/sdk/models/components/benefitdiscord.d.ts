import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BenefitDiscordProperties, BenefitDiscordProperties$Outbound } from "./benefitdiscordproperties.js";
import { BenefitDiscordPropertiesInput, BenefitDiscordPropertiesInput$Outbound } from "./benefitdiscordpropertiesinput.js";
export declare const BenefitDiscordType: {
    readonly Discord: "discord";
};
export type BenefitDiscordType = ClosedEnum<typeof BenefitDiscordType>;
/**
 * A benefit of type `discord`.
 *
 * @remarks
 *
 * Use it to automatically invite your backers to a Discord server.
 */
export type BenefitDiscord = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the benefit.
     */
    id: string;
    type?: "discord" | undefined;
    /**
     * The description of the benefit.
     */
    description: string;
    /**
     * Whether the benefit is selectable when creating a product.
     */
    selectable: boolean;
    /**
     * Whether the benefit is deletable.
     */
    deletable: boolean;
    /**
     * The ID of the organization owning the benefit.
     */
    organizationId: string;
    /**
     * Properties for a benefit of type `discord`.
     */
    properties: BenefitDiscordProperties;
};
/**
 * A benefit of type `discord`.
 *
 * @remarks
 *
 * Use it to automatically invite your backers to a Discord server.
 */
export type BenefitDiscordInput = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the benefit.
     */
    id: string;
    type?: "discord" | undefined;
    /**
     * The description of the benefit.
     */
    description: string;
    /**
     * Whether the benefit is selectable when creating a product.
     */
    selectable: boolean;
    /**
     * Whether the benefit is deletable.
     */
    deletable: boolean;
    /**
     * The ID of the organization owning the benefit.
     */
    organizationId: string;
    /**
     * Properties for a benefit of type `discord`.
     */
    properties: BenefitDiscordPropertiesInput;
};
/** @internal */
export declare const BenefitDiscordType$inboundSchema: z.ZodNativeEnum<typeof BenefitDiscordType>;
/** @internal */
export declare const BenefitDiscordType$outboundSchema: z.ZodNativeEnum<typeof BenefitDiscordType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitDiscordType$ {
    /** @deprecated use `BenefitDiscordType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Discord: "discord";
    }>;
    /** @deprecated use `BenefitDiscordType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Discord: "discord";
    }>;
}
/** @internal */
export declare const BenefitDiscord$inboundSchema: z.ZodType<BenefitDiscord, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitDiscord$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    type: "discord";
    description: string;
    selectable: boolean;
    deletable: boolean;
    organization_id: string;
    properties: BenefitDiscordProperties$Outbound;
};
/** @internal */
export declare const BenefitDiscord$outboundSchema: z.ZodType<BenefitDiscord$Outbound, z.ZodTypeDef, BenefitDiscord>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitDiscord$ {
    /** @deprecated use `BenefitDiscord$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitDiscord, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitDiscord$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitDiscord$Outbound, z.ZodTypeDef, BenefitDiscord>;
    /** @deprecated use `BenefitDiscord$Outbound` instead. */
    type Outbound = BenefitDiscord$Outbound;
}
/** @internal */
export declare const BenefitDiscordInput$inboundSchema: z.ZodType<BenefitDiscordInput, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitDiscordInput$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    type: "discord";
    description: string;
    selectable: boolean;
    deletable: boolean;
    organization_id: string;
    properties: BenefitDiscordPropertiesInput$Outbound;
};
/** @internal */
export declare const BenefitDiscordInput$outboundSchema: z.ZodType<BenefitDiscordInput$Outbound, z.ZodTypeDef, BenefitDiscordInput>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitDiscordInput$ {
    /** @deprecated use `BenefitDiscordInput$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitDiscordInput, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitDiscordInput$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitDiscordInput$Outbound, z.ZodTypeDef, BenefitDiscordInput>;
    /** @deprecated use `BenefitDiscordInput$Outbound` instead. */
    type Outbound = BenefitDiscordInput$Outbound;
}
//# sourceMappingURL=benefitdiscord.d.ts.map