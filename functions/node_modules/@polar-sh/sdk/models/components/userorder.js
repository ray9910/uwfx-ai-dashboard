"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserOrder$ = exports.UserOrder$outboundSchema = exports.UserOrder$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const productprice_js_1 = require("./productprice.js");
const userorderproduct_js_1 = require("./userorderproduct.js");
const userordersubscription_js_1 = require("./userordersubscription.js");
/** @internal */
exports.UserOrder$inboundSchema = z.object({
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    modified_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    id: z.string(),
    amount: z.number().int(),
    tax_amount: z.number().int(),
    currency: z.string(),
    user_id: z.string(),
    product_id: z.string(),
    product_price_id: z.string(),
    subscription_id: z.nullable(z.string()),
    product: userorderproduct_js_1.UserOrderProduct$inboundSchema,
    product_price: productprice_js_1.ProductPrice$inboundSchema,
    subscription: z.nullable(userordersubscription_js_1.UserOrderSubscription$inboundSchema),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "created_at": "createdAt",
        "modified_at": "modifiedAt",
        "tax_amount": "taxAmount",
        "user_id": "userId",
        "product_id": "productId",
        "product_price_id": "productPriceId",
        "subscription_id": "subscriptionId",
        "product_price": "productPrice",
    });
});
/** @internal */
exports.UserOrder$outboundSchema = z.object({
    createdAt: z.date().transform(v => v.toISOString()),
    modifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
    id: z.string(),
    amount: z.number().int(),
    taxAmount: z.number().int(),
    currency: z.string(),
    userId: z.string(),
    productId: z.string(),
    productPriceId: z.string(),
    subscriptionId: z.nullable(z.string()),
    product: userorderproduct_js_1.UserOrderProduct$outboundSchema,
    productPrice: productprice_js_1.ProductPrice$outboundSchema,
    subscription: z.nullable(userordersubscription_js_1.UserOrderSubscription$outboundSchema),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        createdAt: "created_at",
        modifiedAt: "modified_at",
        taxAmount: "tax_amount",
        userId: "user_id",
        productId: "product_id",
        productPriceId: "product_price_id",
        subscriptionId: "subscription_id",
        productPrice: "product_price",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UserOrder$;
(function (UserOrder$) {
    /** @deprecated use `UserOrder$inboundSchema` instead. */
    UserOrder$.inboundSchema = exports.UserOrder$inboundSchema;
    /** @deprecated use `UserOrder$outboundSchema` instead. */
    UserOrder$.outboundSchema = exports.UserOrder$outboundSchema;
})(UserOrder$ || (exports.UserOrder$ = UserOrder$ = {}));
//# sourceMappingURL=userorder.js.map