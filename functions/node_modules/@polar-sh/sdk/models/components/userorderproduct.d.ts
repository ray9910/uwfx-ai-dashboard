import * as z from "zod";
import { BenefitArticles, BenefitArticles$Outbound } from "./benefitarticles.js";
import { BenefitBase, BenefitBase$Outbound } from "./benefitbase.js";
import { ProductMediaFileRead, ProductMediaFileRead$Outbound } from "./productmediafileread.js";
import { ProductPrice, ProductPrice$Outbound } from "./productprice.js";
export type Benefits = BenefitBase | BenefitArticles;
export type UserOrderProduct = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the product.
     */
    id: string;
    /**
     * The name of the product.
     */
    name: string;
    /**
     * The description of the product.
     */
    description: string | null;
    /**
     * Whether the product is a subscription tier.
     */
    isRecurring: boolean;
    /**
     * Whether the product is archived and no longer available.
     */
    isArchived: boolean;
    /**
     * The ID of the organization owning the product.
     */
    organizationId: string;
    /**
     * List of available prices for this product.
     */
    prices: Array<ProductPrice>;
    /**
     * The benefits granted by the product.
     */
    benefits: Array<BenefitBase | BenefitArticles>;
    /**
     * The medias associated to the product.
     */
    medias: Array<ProductMediaFileRead>;
};
/** @internal */
export declare const Benefits$inboundSchema: z.ZodType<Benefits, z.ZodTypeDef, unknown>;
/** @internal */
export type Benefits$Outbound = BenefitBase$Outbound | BenefitArticles$Outbound;
/** @internal */
export declare const Benefits$outboundSchema: z.ZodType<Benefits$Outbound, z.ZodTypeDef, Benefits>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Benefits$ {
    /** @deprecated use `Benefits$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Benefits, z.ZodTypeDef, unknown>;
    /** @deprecated use `Benefits$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Benefits$Outbound, z.ZodTypeDef, Benefits>;
    /** @deprecated use `Benefits$Outbound` instead. */
    type Outbound = Benefits$Outbound;
}
/** @internal */
export declare const UserOrderProduct$inboundSchema: z.ZodType<UserOrderProduct, z.ZodTypeDef, unknown>;
/** @internal */
export type UserOrderProduct$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    name: string;
    description: string | null;
    is_recurring: boolean;
    is_archived: boolean;
    organization_id: string;
    prices: Array<ProductPrice$Outbound>;
    benefits: Array<BenefitBase$Outbound | BenefitArticles$Outbound>;
    medias: Array<ProductMediaFileRead$Outbound>;
};
/** @internal */
export declare const UserOrderProduct$outboundSchema: z.ZodType<UserOrderProduct$Outbound, z.ZodTypeDef, UserOrderProduct>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UserOrderProduct$ {
    /** @deprecated use `UserOrderProduct$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UserOrderProduct, z.ZodTypeDef, unknown>;
    /** @deprecated use `UserOrderProduct$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UserOrderProduct$Outbound, z.ZodTypeDef, UserOrderProduct>;
    /** @deprecated use `UserOrderProduct$Outbound` instead. */
    type Outbound = UserOrderProduct$Outbound;
}
//# sourceMappingURL=userorderproduct.d.ts.map