import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BenefitArticlesSubscriberProperties, BenefitArticlesSubscriberProperties$Outbound } from "./benefitarticlessubscriberproperties.js";
export declare const Type: {
    readonly Articles: "articles";
};
export type Type = ClosedEnum<typeof Type>;
export type BenefitArticlesSubscriber = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the benefit.
     */
    id: string;
    type?: "articles" | undefined;
    /**
     * The description of the benefit.
     */
    description: string;
    /**
     * Whether the benefit is selectable when creating a product.
     */
    selectable: boolean;
    /**
     * Whether the benefit is deletable.
     */
    deletable: boolean;
    /**
     * The ID of the organization owning the benefit.
     */
    organizationId: string;
    /**
     * Properties available to subscribers for a benefit of type `articles`.
     */
    properties: BenefitArticlesSubscriberProperties;
};
/** @internal */
export declare const Type$inboundSchema: z.ZodNativeEnum<typeof Type>;
/** @internal */
export declare const Type$outboundSchema: z.ZodNativeEnum<typeof Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Type$ {
    /** @deprecated use `Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Articles: "articles";
    }>;
    /** @deprecated use `Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Articles: "articles";
    }>;
}
/** @internal */
export declare const BenefitArticlesSubscriber$inboundSchema: z.ZodType<BenefitArticlesSubscriber, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitArticlesSubscriber$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    type: "articles";
    description: string;
    selectable: boolean;
    deletable: boolean;
    organization_id: string;
    properties: BenefitArticlesSubscriberProperties$Outbound;
};
/** @internal */
export declare const BenefitArticlesSubscriber$outboundSchema: z.ZodType<BenefitArticlesSubscriber$Outbound, z.ZodTypeDef, BenefitArticlesSubscriber>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitArticlesSubscriber$ {
    /** @deprecated use `BenefitArticlesSubscriber$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitArticlesSubscriber, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitArticlesSubscriber$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitArticlesSubscriber$Outbound, z.ZodTypeDef, BenefitArticlesSubscriber>;
    /** @deprecated use `BenefitArticlesSubscriber$Outbound` instead. */
    type Outbound = BenefitArticlesSubscriber$Outbound;
}
//# sourceMappingURL=benefitarticlessubscriber.d.ts.map