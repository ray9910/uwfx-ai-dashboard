import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { Pledge, Pledge$Outbound } from "./pledge.js";
export declare const WebhookPledgeUpdatedPayloadType: {
    readonly PledgeUpdated: "pledge.updated";
};
export type WebhookPledgeUpdatedPayloadType = ClosedEnum<typeof WebhookPledgeUpdatedPayloadType>;
/**
 * Sent when a pledge is updated.
 *
 * @remarks
 *
 * **Discord & Slack support:** Basic
 */
export type WebhookPledgeUpdatedPayload = {
    type?: "pledge.updated" | undefined;
    data: Pledge;
};
/** @internal */
export declare const WebhookPledgeUpdatedPayloadType$inboundSchema: z.ZodNativeEnum<typeof WebhookPledgeUpdatedPayloadType>;
/** @internal */
export declare const WebhookPledgeUpdatedPayloadType$outboundSchema: z.ZodNativeEnum<typeof WebhookPledgeUpdatedPayloadType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WebhookPledgeUpdatedPayloadType$ {
    /** @deprecated use `WebhookPledgeUpdatedPayloadType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly PledgeUpdated: "pledge.updated";
    }>;
    /** @deprecated use `WebhookPledgeUpdatedPayloadType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly PledgeUpdated: "pledge.updated";
    }>;
}
/** @internal */
export declare const WebhookPledgeUpdatedPayload$inboundSchema: z.ZodType<WebhookPledgeUpdatedPayload, z.ZodTypeDef, unknown>;
/** @internal */
export type WebhookPledgeUpdatedPayload$Outbound = {
    type: "pledge.updated";
    data: Pledge$Outbound;
};
/** @internal */
export declare const WebhookPledgeUpdatedPayload$outboundSchema: z.ZodType<WebhookPledgeUpdatedPayload$Outbound, z.ZodTypeDef, WebhookPledgeUpdatedPayload>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WebhookPledgeUpdatedPayload$ {
    /** @deprecated use `WebhookPledgeUpdatedPayload$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WebhookPledgeUpdatedPayload, z.ZodTypeDef, unknown>;
    /** @deprecated use `WebhookPledgeUpdatedPayload$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WebhookPledgeUpdatedPayload$Outbound, z.ZodTypeDef, WebhookPledgeUpdatedPayload>;
    /** @deprecated use `WebhookPledgeUpdatedPayload$Outbound` instead. */
    type Outbound = WebhookPledgeUpdatedPayload$Outbound;
}
//# sourceMappingURL=webhookpledgeupdatedpayload.d.ts.map