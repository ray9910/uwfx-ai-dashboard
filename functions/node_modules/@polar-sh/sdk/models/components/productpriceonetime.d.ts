import * as z from "zod";
import { ProductPriceOneTimeCustom, ProductPriceOneTimeCustom$Outbound } from "./productpriceonetimecustom.js";
import { ProductPriceOneTimeFixed, ProductPriceOneTimeFixed$Outbound } from "./productpriceonetimefixed.js";
import { ProductPriceOneTimeFree, ProductPriceOneTimeFree$Outbound } from "./productpriceonetimefree.js";
export type ProductPriceOneTime = ProductPriceOneTimeFree | ProductPriceOneTimeFixed | ProductPriceOneTimeCustom;
/** @internal */
export declare const ProductPriceOneTime$inboundSchema: z.ZodType<ProductPriceOneTime, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductPriceOneTime$Outbound = ProductPriceOneTimeFree$Outbound | ProductPriceOneTimeFixed$Outbound | ProductPriceOneTimeCustom$Outbound;
/** @internal */
export declare const ProductPriceOneTime$outboundSchema: z.ZodType<ProductPriceOneTime$Outbound, z.ZodTypeDef, ProductPriceOneTime>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductPriceOneTime$ {
    /** @deprecated use `ProductPriceOneTime$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductPriceOneTime, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductPriceOneTime$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductPriceOneTime$Outbound, z.ZodTypeDef, ProductPriceOneTime>;
    /** @deprecated use `ProductPriceOneTime$Outbound` instead. */
    type Outbound = ProductPriceOneTime$Outbound;
}
//# sourceMappingURL=productpriceonetime.d.ts.map