import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
export declare const SubscriptionSortProperty: {
    readonly User: "user";
    readonly MinusUser: "-user";
    readonly Status: "status";
    readonly MinusStatus: "-status";
    readonly StartedAt: "started_at";
    readonly MinusStartedAt: "-started_at";
    readonly CurrentPeriodEnd: "current_period_end";
    readonly MinusCurrentPeriodEnd: "-current_period_end";
    readonly Amount: "amount";
    readonly MinusAmount: "-amount";
    readonly Product: "product";
    readonly MinusProduct: "-product";
};
export type SubscriptionSortProperty = ClosedEnum<typeof SubscriptionSortProperty>;
/** @internal */
export declare const SubscriptionSortProperty$inboundSchema: z.ZodNativeEnum<typeof SubscriptionSortProperty>;
/** @internal */
export declare const SubscriptionSortProperty$outboundSchema: z.ZodNativeEnum<typeof SubscriptionSortProperty>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace SubscriptionSortProperty$ {
    /** @deprecated use `SubscriptionSortProperty$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly User: "user";
        readonly MinusUser: "-user";
        readonly Status: "status";
        readonly MinusStatus: "-status";
        readonly StartedAt: "started_at";
        readonly MinusStartedAt: "-started_at";
        readonly CurrentPeriodEnd: "current_period_end";
        readonly MinusCurrentPeriodEnd: "-current_period_end";
        readonly Amount: "amount";
        readonly MinusAmount: "-amount";
        readonly Product: "product";
        readonly MinusProduct: "-product";
    }>;
    /** @deprecated use `SubscriptionSortProperty$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly User: "user";
        readonly MinusUser: "-user";
        readonly Status: "status";
        readonly MinusStatus: "-status";
        readonly StartedAt: "started_at";
        readonly MinusStartedAt: "-started_at";
        readonly CurrentPeriodEnd: "current_period_end";
        readonly MinusCurrentPeriodEnd: "-current_period_end";
        readonly Amount: "amount";
        readonly MinusAmount: "-amount";
        readonly Product: "product";
        readonly MinusProduct: "-product";
    }>;
}
//# sourceMappingURL=subscriptionsortproperty.d.ts.map