import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
import { BenefitArticlesProperties, BenefitArticlesProperties$Outbound } from "./benefitarticlesproperties.js";
export declare const BenefitArticlesType: {
    readonly Articles: "articles";
};
export type BenefitArticlesType = ClosedEnum<typeof BenefitArticlesType>;
/**
 * A benefit of type `articles`.
 *
 * @remarks
 *
 * Use it to grant access to posts.
 */
export type BenefitArticles = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the benefit.
     */
    id: string;
    type?: "articles" | undefined;
    /**
     * The description of the benefit.
     */
    description: string;
    /**
     * Whether the benefit is selectable when creating a product.
     */
    selectable: boolean;
    /**
     * Whether the benefit is deletable.
     */
    deletable: boolean;
    /**
     * The ID of the organization owning the benefit.
     */
    organizationId: string;
    /**
     * Properties for a benefit of type `articles`.
     */
    properties: BenefitArticlesProperties;
};
/** @internal */
export declare const BenefitArticlesType$inboundSchema: z.ZodNativeEnum<typeof BenefitArticlesType>;
/** @internal */
export declare const BenefitArticlesType$outboundSchema: z.ZodNativeEnum<typeof BenefitArticlesType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitArticlesType$ {
    /** @deprecated use `BenefitArticlesType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Articles: "articles";
    }>;
    /** @deprecated use `BenefitArticlesType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Articles: "articles";
    }>;
}
/** @internal */
export declare const BenefitArticles$inboundSchema: z.ZodType<BenefitArticles, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitArticles$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    type: "articles";
    description: string;
    selectable: boolean;
    deletable: boolean;
    organization_id: string;
    properties: BenefitArticlesProperties$Outbound;
};
/** @internal */
export declare const BenefitArticles$outboundSchema: z.ZodType<BenefitArticles$Outbound, z.ZodTypeDef, BenefitArticles>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitArticles$ {
    /** @deprecated use `BenefitArticles$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitArticles, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitArticles$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitArticles$Outbound, z.ZodTypeDef, BenefitArticles>;
    /** @deprecated use `BenefitArticles$Outbound` instead. */
    type Outbound = BenefitArticles$Outbound;
}
//# sourceMappingURL=benefitarticles.d.ts.map