import * as z from "zod";
import { BenefitGrantAdsProperties, BenefitGrantAdsProperties$Outbound } from "./benefitgrantadsproperties.js";
import { BenefitGrantArticlesProperties, BenefitGrantArticlesProperties$Outbound } from "./benefitgrantarticlesproperties.js";
import { BenefitGrantCustomProperties, BenefitGrantCustomProperties$Outbound } from "./benefitgrantcustomproperties.js";
import { BenefitGrantDiscordProperties, BenefitGrantDiscordProperties$Outbound } from "./benefitgrantdiscordproperties.js";
import { BenefitGrantDownloadablesProperties, BenefitGrantDownloadablesProperties$Outbound } from "./benefitgrantdownloadablesproperties.js";
import { BenefitGrantGitHubRepositoryProperties, BenefitGrantGitHubRepositoryProperties$Outbound } from "./benefitgrantgithubrepositoryproperties.js";
import { BenefitGrantLicenseKeysProperties, BenefitGrantLicenseKeysProperties$Outbound } from "./benefitgrantlicensekeysproperties.js";
import { BenefitInput, BenefitInput$Outbound } from "./benefitinput.js";
export type BenefitGrantWebhookProperties = BenefitGrantCustomProperties | BenefitGrantArticlesProperties | BenefitGrantDownloadablesProperties | BenefitGrantAdsProperties | BenefitGrantLicenseKeysProperties | BenefitGrantDiscordProperties | BenefitGrantGitHubRepositoryProperties;
export type PreviousProperties = BenefitGrantCustomProperties | BenefitGrantArticlesProperties | BenefitGrantDownloadablesProperties | BenefitGrantAdsProperties | BenefitGrantLicenseKeysProperties | BenefitGrantDiscordProperties | BenefitGrantGitHubRepositoryProperties;
export type BenefitGrantWebhook = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the grant.
     */
    id: string;
    /**
     * The timestamp when the benefit was granted. If `None`, the benefit is not granted.
     */
    grantedAt?: Date | null | undefined;
    /**
     * Whether the benefit is granted.
     */
    isGranted: boolean;
    /**
     * The timestamp when the benefit was revoked. If `None`, the benefit is not revoked.
     */
    revokedAt?: Date | null | undefined;
    /**
     * Whether the benefit is revoked.
     */
    isRevoked: boolean;
    /**
     * The ID of the subscription that granted this benefit.
     */
    subscriptionId: string | null;
    /**
     * The ID of the order that granted this benefit.
     */
    orderId: string | null;
    /**
     * The ID of the user concerned by this grant.
     */
    userId: string;
    /**
     * The ID of the benefit concerned by this grant.
     */
    benefitId: string;
    properties: BenefitGrantCustomProperties | BenefitGrantArticlesProperties | BenefitGrantDownloadablesProperties | BenefitGrantAdsProperties | BenefitGrantLicenseKeysProperties | BenefitGrantDiscordProperties | BenefitGrantGitHubRepositoryProperties;
    benefit: BenefitInput;
    previousProperties?: BenefitGrantCustomProperties | BenefitGrantArticlesProperties | BenefitGrantDownloadablesProperties | BenefitGrantAdsProperties | BenefitGrantLicenseKeysProperties | BenefitGrantDiscordProperties | BenefitGrantGitHubRepositoryProperties | null | undefined;
};
/** @internal */
export declare const BenefitGrantWebhookProperties$inboundSchema: z.ZodType<BenefitGrantWebhookProperties, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitGrantWebhookProperties$Outbound = BenefitGrantCustomProperties$Outbound | BenefitGrantArticlesProperties$Outbound | BenefitGrantDownloadablesProperties$Outbound | BenefitGrantAdsProperties$Outbound | BenefitGrantLicenseKeysProperties$Outbound | BenefitGrantDiscordProperties$Outbound | BenefitGrantGitHubRepositoryProperties$Outbound;
/** @internal */
export declare const BenefitGrantWebhookProperties$outboundSchema: z.ZodType<BenefitGrantWebhookProperties$Outbound, z.ZodTypeDef, BenefitGrantWebhookProperties>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitGrantWebhookProperties$ {
    /** @deprecated use `BenefitGrantWebhookProperties$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitGrantWebhookProperties, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitGrantWebhookProperties$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitGrantWebhookProperties$Outbound, z.ZodTypeDef, BenefitGrantWebhookProperties>;
    /** @deprecated use `BenefitGrantWebhookProperties$Outbound` instead. */
    type Outbound = BenefitGrantWebhookProperties$Outbound;
}
/** @internal */
export declare const PreviousProperties$inboundSchema: z.ZodType<PreviousProperties, z.ZodTypeDef, unknown>;
/** @internal */
export type PreviousProperties$Outbound = BenefitGrantCustomProperties$Outbound | BenefitGrantArticlesProperties$Outbound | BenefitGrantDownloadablesProperties$Outbound | BenefitGrantAdsProperties$Outbound | BenefitGrantLicenseKeysProperties$Outbound | BenefitGrantDiscordProperties$Outbound | BenefitGrantGitHubRepositoryProperties$Outbound;
/** @internal */
export declare const PreviousProperties$outboundSchema: z.ZodType<PreviousProperties$Outbound, z.ZodTypeDef, PreviousProperties>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PreviousProperties$ {
    /** @deprecated use `PreviousProperties$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PreviousProperties, z.ZodTypeDef, unknown>;
    /** @deprecated use `PreviousProperties$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PreviousProperties$Outbound, z.ZodTypeDef, PreviousProperties>;
    /** @deprecated use `PreviousProperties$Outbound` instead. */
    type Outbound = PreviousProperties$Outbound;
}
/** @internal */
export declare const BenefitGrantWebhook$inboundSchema: z.ZodType<BenefitGrantWebhook, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitGrantWebhook$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    granted_at?: string | null | undefined;
    is_granted: boolean;
    revoked_at?: string | null | undefined;
    is_revoked: boolean;
    subscription_id: string | null;
    order_id: string | null;
    user_id: string;
    benefit_id: string;
    properties: BenefitGrantCustomProperties$Outbound | BenefitGrantArticlesProperties$Outbound | BenefitGrantDownloadablesProperties$Outbound | BenefitGrantAdsProperties$Outbound | BenefitGrantLicenseKeysProperties$Outbound | BenefitGrantDiscordProperties$Outbound | BenefitGrantGitHubRepositoryProperties$Outbound;
    benefit: BenefitInput$Outbound;
    previous_properties?: BenefitGrantCustomProperties$Outbound | BenefitGrantArticlesProperties$Outbound | BenefitGrantDownloadablesProperties$Outbound | BenefitGrantAdsProperties$Outbound | BenefitGrantLicenseKeysProperties$Outbound | BenefitGrantDiscordProperties$Outbound | BenefitGrantGitHubRepositoryProperties$Outbound | null | undefined;
};
/** @internal */
export declare const BenefitGrantWebhook$outboundSchema: z.ZodType<BenefitGrantWebhook$Outbound, z.ZodTypeDef, BenefitGrantWebhook>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitGrantWebhook$ {
    /** @deprecated use `BenefitGrantWebhook$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitGrantWebhook, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitGrantWebhook$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitGrantWebhook$Outbound, z.ZodTypeDef, BenefitGrantWebhook>;
    /** @deprecated use `BenefitGrantWebhook$Outbound` instead. */
    type Outbound = BenefitGrantWebhook$Outbound;
}
//# sourceMappingURL=benefitgrantwebhook.d.ts.map