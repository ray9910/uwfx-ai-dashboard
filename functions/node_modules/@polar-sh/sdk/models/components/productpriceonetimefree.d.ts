import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
export declare const ProductPriceOneTimeFreeAmountType: {
    readonly Free: "free";
};
export type ProductPriceOneTimeFreeAmountType = ClosedEnum<typeof ProductPriceOneTimeFreeAmountType>;
/**
 * The type of the price.
 */
export declare const ProductPriceOneTimeFreeType: {
    readonly OneTime: "one_time";
};
/**
 * The type of the price.
 */
export type ProductPriceOneTimeFreeType = ClosedEnum<typeof ProductPriceOneTimeFreeType>;
/**
 * A free one-time price for a product.
 */
export type ProductPriceOneTimeFree = {
    /**
     * Creation timestamp of the object.
     */
    createdAt: Date;
    /**
     * Last modification timestamp of the object.
     */
    modifiedAt: Date | null;
    /**
     * The ID of the price.
     */
    id: string;
    amountType?: "free" | undefined;
    /**
     * Whether the price is archived and no longer available.
     */
    isArchived: boolean;
    /**
     * The ID of the product owning the price.
     */
    productId: string;
    /**
     * The type of the price.
     */
    type?: "one_time" | undefined;
};
/** @internal */
export declare const ProductPriceOneTimeFreeAmountType$inboundSchema: z.ZodNativeEnum<typeof ProductPriceOneTimeFreeAmountType>;
/** @internal */
export declare const ProductPriceOneTimeFreeAmountType$outboundSchema: z.ZodNativeEnum<typeof ProductPriceOneTimeFreeAmountType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductPriceOneTimeFreeAmountType$ {
    /** @deprecated use `ProductPriceOneTimeFreeAmountType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Free: "free";
    }>;
    /** @deprecated use `ProductPriceOneTimeFreeAmountType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Free: "free";
    }>;
}
/** @internal */
export declare const ProductPriceOneTimeFreeType$inboundSchema: z.ZodNativeEnum<typeof ProductPriceOneTimeFreeType>;
/** @internal */
export declare const ProductPriceOneTimeFreeType$outboundSchema: z.ZodNativeEnum<typeof ProductPriceOneTimeFreeType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductPriceOneTimeFreeType$ {
    /** @deprecated use `ProductPriceOneTimeFreeType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly OneTime: "one_time";
    }>;
    /** @deprecated use `ProductPriceOneTimeFreeType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly OneTime: "one_time";
    }>;
}
/** @internal */
export declare const ProductPriceOneTimeFree$inboundSchema: z.ZodType<ProductPriceOneTimeFree, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductPriceOneTimeFree$Outbound = {
    created_at: string;
    modified_at: string | null;
    id: string;
    amount_type: "free";
    is_archived: boolean;
    product_id: string;
    type: "one_time";
};
/** @internal */
export declare const ProductPriceOneTimeFree$outboundSchema: z.ZodType<ProductPriceOneTimeFree$Outbound, z.ZodTypeDef, ProductPriceOneTimeFree>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductPriceOneTimeFree$ {
    /** @deprecated use `ProductPriceOneTimeFree$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductPriceOneTimeFree, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductPriceOneTimeFree$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductPriceOneTimeFree$Outbound, z.ZodTypeDef, ProductPriceOneTimeFree>;
    /** @deprecated use `ProductPriceOneTimeFree$Outbound` instead. */
    type Outbound = ProductPriceOneTimeFree$Outbound;
}
//# sourceMappingURL=productpriceonetimefree.d.ts.map