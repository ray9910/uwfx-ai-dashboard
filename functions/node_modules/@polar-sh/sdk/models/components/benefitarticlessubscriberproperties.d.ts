import * as z from "zod";
/**
 * Properties available to subscribers for a benefit of type `articles`.
 */
export type BenefitArticlesSubscriberProperties = {
    /**
     * Whether the user can access paid articles.
     */
    paidArticles: boolean;
};
/** @internal */
export declare const BenefitArticlesSubscriberProperties$inboundSchema: z.ZodType<BenefitArticlesSubscriberProperties, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitArticlesSubscriberProperties$Outbound = {
    paid_articles: boolean;
};
/** @internal */
export declare const BenefitArticlesSubscriberProperties$outboundSchema: z.ZodType<BenefitArticlesSubscriberProperties$Outbound, z.ZodTypeDef, BenefitArticlesSubscriberProperties>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitArticlesSubscriberProperties$ {
    /** @deprecated use `BenefitArticlesSubscriberProperties$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitArticlesSubscriberProperties, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitArticlesSubscriberProperties$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitArticlesSubscriberProperties$Outbound, z.ZodTypeDef, BenefitArticlesSubscriberProperties>;
    /** @deprecated use `BenefitArticlesSubscriberProperties$Outbound` instead. */
    type Outbound = BenefitArticlesSubscriberProperties$Outbound;
}
//# sourceMappingURL=benefitarticlessubscriberproperties.d.ts.map