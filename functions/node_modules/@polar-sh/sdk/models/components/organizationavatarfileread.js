"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrganizationAvatarFileRead$ = exports.OrganizationAvatarFileRead$outboundSchema = exports.OrganizationAvatarFileRead$inboundSchema = exports.OrganizationAvatarFileReadService$ = exports.OrganizationAvatarFileReadService$outboundSchema = exports.OrganizationAvatarFileReadService$inboundSchema = exports.OrganizationAvatarFileReadService = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
exports.OrganizationAvatarFileReadService = {
    OrganizationAvatar: "organization_avatar",
};
/** @internal */
exports.OrganizationAvatarFileReadService$inboundSchema = z.nativeEnum(exports.OrganizationAvatarFileReadService);
/** @internal */
exports.OrganizationAvatarFileReadService$outboundSchema = exports.OrganizationAvatarFileReadService$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrganizationAvatarFileReadService$;
(function (OrganizationAvatarFileReadService$) {
    /** @deprecated use `OrganizationAvatarFileReadService$inboundSchema` instead. */
    OrganizationAvatarFileReadService$.inboundSchema = exports.OrganizationAvatarFileReadService$inboundSchema;
    /** @deprecated use `OrganizationAvatarFileReadService$outboundSchema` instead. */
    OrganizationAvatarFileReadService$.outboundSchema = exports.OrganizationAvatarFileReadService$outboundSchema;
})(OrganizationAvatarFileReadService$ || (exports.OrganizationAvatarFileReadService$ = OrganizationAvatarFileReadService$ = {}));
/** @internal */
exports.OrganizationAvatarFileRead$inboundSchema = z.object({
    id: z.string(),
    organization_id: z.string(),
    name: z.string(),
    path: z.string(),
    mime_type: z.string(),
    size: z.number().int(),
    storage_version: z.nullable(z.string()),
    checksum_etag: z.nullable(z.string()),
    checksum_sha256_base64: z.nullable(z.string()),
    checksum_sha256_hex: z.nullable(z.string()),
    last_modified_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))),
    version: z.nullable(z.string()),
    service: z.literal("organization_avatar").optional(),
    is_uploaded: z.boolean(),
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    size_readable: z.string(),
    public_url: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "organization_id": "organizationId",
        "mime_type": "mimeType",
        "storage_version": "storageVersion",
        "checksum_etag": "checksumEtag",
        "checksum_sha256_base64": "checksumSha256Base64",
        "checksum_sha256_hex": "checksumSha256Hex",
        "last_modified_at": "lastModifiedAt",
        "is_uploaded": "isUploaded",
        "created_at": "createdAt",
        "size_readable": "sizeReadable",
        "public_url": "publicUrl",
    });
});
/** @internal */
exports.OrganizationAvatarFileRead$outboundSchema = z.object({
    id: z.string(),
    organizationId: z.string(),
    name: z.string(),
    path: z.string(),
    mimeType: z.string(),
    size: z.number().int(),
    storageVersion: z.nullable(z.string()),
    checksumEtag: z.nullable(z.string()),
    checksumSha256Base64: z.nullable(z.string()),
    checksumSha256Hex: z.nullable(z.string()),
    lastModifiedAt: z.nullable(z.date().transform(v => v.toISOString())),
    version: z.nullable(z.string()),
    service: z.literal("organization_avatar").default("organization_avatar"),
    isUploaded: z.boolean(),
    createdAt: z.date().transform(v => v.toISOString()),
    sizeReadable: z.string(),
    publicUrl: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        organizationId: "organization_id",
        mimeType: "mime_type",
        storageVersion: "storage_version",
        checksumEtag: "checksum_etag",
        checksumSha256Base64: "checksum_sha256_base64",
        checksumSha256Hex: "checksum_sha256_hex",
        lastModifiedAt: "last_modified_at",
        isUploaded: "is_uploaded",
        createdAt: "created_at",
        sizeReadable: "size_readable",
        publicUrl: "public_url",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrganizationAvatarFileRead$;
(function (OrganizationAvatarFileRead$) {
    /** @deprecated use `OrganizationAvatarFileRead$inboundSchema` instead. */
    OrganizationAvatarFileRead$.inboundSchema = exports.OrganizationAvatarFileRead$inboundSchema;
    /** @deprecated use `OrganizationAvatarFileRead$outboundSchema` instead. */
    OrganizationAvatarFileRead$.outboundSchema = exports.OrganizationAvatarFileRead$outboundSchema;
})(OrganizationAvatarFileRead$ || (exports.OrganizationAvatarFileRead$ = OrganizationAvatarFileRead$ = {}));
//# sourceMappingURL=organizationavatarfileread.js.map