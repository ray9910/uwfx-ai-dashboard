import * as z from "zod";
/**
 * Schema to update an existing checkout link.
 */
export type CheckoutLinkUpdate = {
    /**
     * Key-value object allowing you to store additional information.
     *
     * @remarks
     *
     * The key must be a string with a maximum length of **40 characters**.
     * The value must be a string with a maximum length of **500 characters**.
     * You can store up to **50 key-value pairs**.
     */
    metadata?: {
        [k: string]: string;
    } | null | undefined;
    /**
     * URL where the customer will be redirected after a successful payment.You can add the `checkout_id={CHECKOUT_ID}` query parameter to retrieve the checkout session id.
     */
    successUrl?: string | null | undefined;
};
/** @internal */
export declare const CheckoutLinkUpdate$inboundSchema: z.ZodType<CheckoutLinkUpdate, z.ZodTypeDef, unknown>;
/** @internal */
export type CheckoutLinkUpdate$Outbound = {
    metadata?: {
        [k: string]: string;
    } | null | undefined;
    success_url?: string | null | undefined;
};
/** @internal */
export declare const CheckoutLinkUpdate$outboundSchema: z.ZodType<CheckoutLinkUpdate$Outbound, z.ZodTypeDef, CheckoutLinkUpdate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CheckoutLinkUpdate$ {
    /** @deprecated use `CheckoutLinkUpdate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CheckoutLinkUpdate, z.ZodTypeDef, unknown>;
    /** @deprecated use `CheckoutLinkUpdate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CheckoutLinkUpdate$Outbound, z.ZodTypeDef, CheckoutLinkUpdate>;
    /** @deprecated use `CheckoutLinkUpdate$Outbound` instead. */
    type Outbound = CheckoutLinkUpdate$Outbound;
}
//# sourceMappingURL=checkoutlinkupdate.d.ts.map