import * as z from "zod";
import { ExistingProductPrice, ExistingProductPrice$Outbound } from "./existingproductprice.js";
import { ProductPriceOneTimeCustomCreate, ProductPriceOneTimeCustomCreate$Outbound } from "./productpriceonetimecustomcreate.js";
import { ProductPriceOneTimeFixedCreate, ProductPriceOneTimeFixedCreate$Outbound } from "./productpriceonetimefixedcreate.js";
import { ProductPriceOneTimeFreeCreate, ProductPriceOneTimeFreeCreate$Outbound } from "./productpriceonetimefreecreate.js";
import { ProductPriceRecurringFixedCreate, ProductPriceRecurringFixedCreate$Outbound } from "./productpricerecurringfixedcreate.js";
import { ProductPriceRecurringFreeCreate, ProductPriceRecurringFreeCreate$Outbound } from "./productpricerecurringfreecreate.js";
export type ProductUpdatePrices = ExistingProductPrice | ProductPriceOneTimeFreeCreate | ProductPriceRecurringFreeCreate | ProductPriceOneTimeFixedCreate | ProductPriceRecurringFixedCreate | ProductPriceOneTimeCustomCreate;
/**
 * Schema to update a product.
 */
export type ProductUpdate = {
    name?: string | null | undefined;
    /**
     * The description of the product.
     */
    description?: string | null | undefined;
    /**
     * Whether the product is archived. If `true`, the product won't be available for purchase anymore. Existing customers will still have access to their benefits, and subscriptions will continue normally.
     */
    isArchived?: boolean | null | undefined;
    /**
     * List of available prices for this product. If you want to keep existing prices, include them in the list as an `ExistingProductPrice` object.
     */
    prices?: Array<ExistingProductPrice | ProductPriceOneTimeFreeCreate | ProductPriceRecurringFreeCreate | ProductPriceOneTimeFixedCreate | ProductPriceRecurringFixedCreate | ProductPriceOneTimeCustomCreate> | null | undefined;
    /**
     * List of file IDs. Each one must be on the same organization as the product, of type `product_media` and correctly uploaded.
     */
    medias?: Array<string> | null | undefined;
};
/** @internal */
export declare const ProductUpdatePrices$inboundSchema: z.ZodType<ProductUpdatePrices, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductUpdatePrices$Outbound = ExistingProductPrice$Outbound | ProductPriceOneTimeFreeCreate$Outbound | ProductPriceRecurringFreeCreate$Outbound | ProductPriceOneTimeFixedCreate$Outbound | ProductPriceRecurringFixedCreate$Outbound | ProductPriceOneTimeCustomCreate$Outbound;
/** @internal */
export declare const ProductUpdatePrices$outboundSchema: z.ZodType<ProductUpdatePrices$Outbound, z.ZodTypeDef, ProductUpdatePrices>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductUpdatePrices$ {
    /** @deprecated use `ProductUpdatePrices$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductUpdatePrices, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductUpdatePrices$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductUpdatePrices$Outbound, z.ZodTypeDef, ProductUpdatePrices>;
    /** @deprecated use `ProductUpdatePrices$Outbound` instead. */
    type Outbound = ProductUpdatePrices$Outbound;
}
/** @internal */
export declare const ProductUpdate$inboundSchema: z.ZodType<ProductUpdate, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductUpdate$Outbound = {
    name?: string | null | undefined;
    description?: string | null | undefined;
    is_archived?: boolean | null | undefined;
    prices?: Array<ExistingProductPrice$Outbound | ProductPriceOneTimeFreeCreate$Outbound | ProductPriceRecurringFreeCreate$Outbound | ProductPriceOneTimeFixedCreate$Outbound | ProductPriceRecurringFixedCreate$Outbound | ProductPriceOneTimeCustomCreate$Outbound> | null | undefined;
    medias?: Array<string> | null | undefined;
};
/** @internal */
export declare const ProductUpdate$outboundSchema: z.ZodType<ProductUpdate$Outbound, z.ZodTypeDef, ProductUpdate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductUpdate$ {
    /** @deprecated use `ProductUpdate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductUpdate, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductUpdate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductUpdate$Outbound, z.ZodTypeDef, ProductUpdate>;
    /** @deprecated use `ProductUpdate$Outbound` instead. */
    type Outbound = ProductUpdate$Outbound;
}
//# sourceMappingURL=productupdate.d.ts.map