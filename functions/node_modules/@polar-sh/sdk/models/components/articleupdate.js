"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArticleUpdate$ = exports.ArticleUpdate$outboundSchema = exports.ArticleUpdate$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const articlebyline_js_1 = require("./articlebyline.js");
const articlevisibility_js_1 = require("./articlevisibility.js");
/** @internal */
exports.ArticleUpdate$inboundSchema = z.object({
    title: z.nullable(z.string()).optional(),
    body: z.nullable(z.string()).optional(),
    body_base64: z.nullable(z.string()).optional(),
    slug: z.nullable(z.string()).optional(),
    byline: z.nullable(articlebyline_js_1.ArticleByline$inboundSchema).optional(),
    visibility: z.nullable(articlevisibility_js_1.ArticleVisibility$inboundSchema).optional(),
    paid_subscribers_only: z.nullable(z.boolean()).optional(),
    paid_subscribers_only_ends_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    published_at: z.nullable(z.string().datetime({ offset: true }).transform(v => new Date(v))).optional(),
    notify_subscribers: z.nullable(z.boolean()).optional(),
    is_pinned: z.nullable(z.boolean()).optional(),
    og_image_url: z.nullable(z.string()).optional(),
    og_description: z.nullable(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "body_base64": "bodyBase64",
        "paid_subscribers_only": "paidSubscribersOnly",
        "paid_subscribers_only_ends_at": "paidSubscribersOnlyEndsAt",
        "published_at": "publishedAt",
        "notify_subscribers": "notifySubscribers",
        "is_pinned": "isPinned",
        "og_image_url": "ogImageUrl",
        "og_description": "ogDescription",
    });
});
/** @internal */
exports.ArticleUpdate$outboundSchema = z.object({
    title: z.nullable(z.string()).optional(),
    body: z.nullable(z.string()).optional(),
    bodyBase64: z.nullable(z.string()).optional(),
    slug: z.nullable(z.string()).optional(),
    byline: z.nullable(articlebyline_js_1.ArticleByline$outboundSchema).optional(),
    visibility: z.nullable(articlevisibility_js_1.ArticleVisibility$outboundSchema).optional(),
    paidSubscribersOnly: z.nullable(z.boolean()).optional(),
    paidSubscribersOnlyEndsAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    publishedAt: z.nullable(z.date().transform(v => v.toISOString())).optional(),
    notifySubscribers: z.nullable(z.boolean()).optional(),
    isPinned: z.nullable(z.boolean()).optional(),
    ogImageUrl: z.nullable(z.string()).optional(),
    ogDescription: z.nullable(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        bodyBase64: "body_base64",
        paidSubscribersOnly: "paid_subscribers_only",
        paidSubscribersOnlyEndsAt: "paid_subscribers_only_ends_at",
        publishedAt: "published_at",
        notifySubscribers: "notify_subscribers",
        isPinned: "is_pinned",
        ogImageUrl: "og_image_url",
        ogDescription: "og_description",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ArticleUpdate$;
(function (ArticleUpdate$) {
    /** @deprecated use `ArticleUpdate$inboundSchema` instead. */
    ArticleUpdate$.inboundSchema = exports.ArticleUpdate$inboundSchema;
    /** @deprecated use `ArticleUpdate$outboundSchema` instead. */
    ArticleUpdate$.outboundSchema = exports.ArticleUpdate$outboundSchema;
})(ArticleUpdate$ || (exports.ArticleUpdate$ = ArticleUpdate$ = {}));
//# sourceMappingURL=articleupdate.js.map