import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
export declare const Type: {
    readonly ResourceNotFound: "ResourceNotFound";
};
export type Type = ClosedEnum<typeof Type>;
export type ResourceNotFoundData = {
    type: "ResourceNotFound";
    detail: string;
};
export declare class ResourceNotFound extends Error {
    type: "ResourceNotFound";
    detail: string;
    /** The original data that was passed to this error instance. */
    data$: ResourceNotFoundData;
    constructor(err: ResourceNotFoundData);
}
/** @internal */
export declare const Type$inboundSchema: z.ZodNativeEnum<typeof Type>;
/** @internal */
export declare const Type$outboundSchema: z.ZodNativeEnum<typeof Type>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Type$ {
    /** @deprecated use `Type$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly ResourceNotFound: "ResourceNotFound";
    }>;
    /** @deprecated use `Type$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly ResourceNotFound: "ResourceNotFound";
    }>;
}
/** @internal */
export declare const ResourceNotFound$inboundSchema: z.ZodType<ResourceNotFound, z.ZodTypeDef, unknown>;
/** @internal */
export type ResourceNotFound$Outbound = {
    type: "ResourceNotFound";
    detail: string;
};
/** @internal */
export declare const ResourceNotFound$outboundSchema: z.ZodType<ResourceNotFound$Outbound, z.ZodTypeDef, ResourceNotFound>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ResourceNotFound$ {
    /** @deprecated use `ResourceNotFound$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ResourceNotFound, z.ZodTypeDef, unknown>;
    /** @deprecated use `ResourceNotFound$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ResourceNotFound$Outbound, z.ZodTypeDef, ResourceNotFound>;
    /** @deprecated use `ResourceNotFound$Outbound` instead. */
    type Outbound = ResourceNotFound$Outbound;
}
//# sourceMappingURL=resourcenotfound.d.ts.map