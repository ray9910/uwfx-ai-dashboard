"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NotPermitted$ = exports.NotPermitted$outboundSchema = exports.NotPermitted$inboundSchema = exports.NotPermittedType$ = exports.NotPermittedType$outboundSchema = exports.NotPermittedType$inboundSchema = exports.NotPermitted = exports.NotPermittedType = void 0;
const z = __importStar(require("zod"));
exports.NotPermittedType = {
    NotPermitted: "NotPermitted",
};
class NotPermitted extends Error {
    constructor(err) {
        const message = "message" in err && typeof err.message === "string"
            ? err.message
            : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;
        this.type = err.type;
        this.detail = err.detail;
        this.name = "NotPermitted";
    }
}
exports.NotPermitted = NotPermitted;
/** @internal */
exports.NotPermittedType$inboundSchema = z.nativeEnum(exports.NotPermittedType);
/** @internal */
exports.NotPermittedType$outboundSchema = exports.NotPermittedType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var NotPermittedType$;
(function (NotPermittedType$) {
    /** @deprecated use `NotPermittedType$inboundSchema` instead. */
    NotPermittedType$.inboundSchema = exports.NotPermittedType$inboundSchema;
    /** @deprecated use `NotPermittedType$outboundSchema` instead. */
    NotPermittedType$.outboundSchema = exports.NotPermittedType$outboundSchema;
})(NotPermittedType$ || (exports.NotPermittedType$ = NotPermittedType$ = {}));
/** @internal */
exports.NotPermitted$inboundSchema = z.object({
    type: z.literal("NotPermitted"),
    detail: z.string(),
})
    .transform((v) => {
    return new NotPermitted(v);
});
/** @internal */
exports.NotPermitted$outboundSchema = z.instanceof(NotPermitted)
    .transform(v => v.data$)
    .pipe(z.object({
    type: z.literal("NotPermitted").default("NotPermitted"),
    detail: z.string(),
}));
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var NotPermitted$;
(function (NotPermitted$) {
    /** @deprecated use `NotPermitted$inboundSchema` instead. */
    NotPermitted$.inboundSchema = exports.NotPermitted$inboundSchema;
    /** @deprecated use `NotPermitted$outboundSchema` instead. */
    NotPermitted$.outboundSchema = exports.NotPermitted$outboundSchema;
})(NotPermitted$ || (exports.NotPermitted$ = NotPermitted$ = {}));
//# sourceMappingURL=notpermitted.js.map