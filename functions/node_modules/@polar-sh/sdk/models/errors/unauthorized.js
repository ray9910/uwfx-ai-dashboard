"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Unauthorized$ = exports.Unauthorized$outboundSchema = exports.Unauthorized$inboundSchema = exports.UnauthorizedType$ = exports.UnauthorizedType$outboundSchema = exports.UnauthorizedType$inboundSchema = exports.Unauthorized = exports.UnauthorizedType = void 0;
const z = __importStar(require("zod"));
exports.UnauthorizedType = {
    Unauthorized: "Unauthorized",
};
class Unauthorized extends Error {
    constructor(err) {
        const message = "message" in err && typeof err.message === "string"
            ? err.message
            : `API error occurred: ${JSON.stringify(err)}`;
        super(message);
        this.data$ = err;
        this.type = err.type;
        this.detail = err.detail;
        this.name = "Unauthorized";
    }
}
exports.Unauthorized = Unauthorized;
/** @internal */
exports.UnauthorizedType$inboundSchema = z.nativeEnum(exports.UnauthorizedType);
/** @internal */
exports.UnauthorizedType$outboundSchema = exports.UnauthorizedType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UnauthorizedType$;
(function (UnauthorizedType$) {
    /** @deprecated use `UnauthorizedType$inboundSchema` instead. */
    UnauthorizedType$.inboundSchema = exports.UnauthorizedType$inboundSchema;
    /** @deprecated use `UnauthorizedType$outboundSchema` instead. */
    UnauthorizedType$.outboundSchema = exports.UnauthorizedType$outboundSchema;
})(UnauthorizedType$ || (exports.UnauthorizedType$ = UnauthorizedType$ = {}));
/** @internal */
exports.Unauthorized$inboundSchema = z.object({
    type: z.literal("Unauthorized"),
    detail: z.string(),
})
    .transform((v) => {
    return new Unauthorized(v);
});
/** @internal */
exports.Unauthorized$outboundSchema = z.instanceof(Unauthorized)
    .transform(v => v.data$)
    .pipe(z.object({
    type: z.literal("Unauthorized").default("Unauthorized"),
    detail: z.string(),
}));
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Unauthorized$;
(function (Unauthorized$) {
    /** @deprecated use `Unauthorized$inboundSchema` instead. */
    Unauthorized$.inboundSchema = exports.Unauthorized$inboundSchema;
    /** @deprecated use `Unauthorized$outboundSchema` instead. */
    Unauthorized$.outboundSchema = exports.Unauthorized$outboundSchema;
})(Unauthorized$ || (exports.Unauthorized$ = Unauthorized$ = {}));
//# sourceMappingURL=unauthorized.js.map