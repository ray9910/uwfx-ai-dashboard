import * as z from "zod";
import * as components from "../components/index.js";
/**
 * Filter by organization ID.
 */
export type UsersLicenseKeysListQueryParamOrganizationIDFilter = string | Array<string>;
export type UsersLicenseKeysListRequest = {
    /**
     * Filter by organization ID.
     */
    organizationId?: string | Array<string> | null | undefined;
    /**
     * Filter by a specific benefit
     */
    benefitId?: string | null | undefined;
    /**
     * Page number, defaults to 1.
     */
    page?: number | undefined;
    /**
     * Size of a page, defaults to 10. Maximum is 100.
     */
    limit?: number | undefined;
};
export type UsersLicenseKeysListResponse = {
    result: components.ListResourceLicenseKeyRead;
};
/** @internal */
export declare const UsersLicenseKeysListQueryParamOrganizationIDFilter$inboundSchema: z.ZodType<UsersLicenseKeysListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type UsersLicenseKeysListQueryParamOrganizationIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const UsersLicenseKeysListQueryParamOrganizationIDFilter$outboundSchema: z.ZodType<UsersLicenseKeysListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, UsersLicenseKeysListQueryParamOrganizationIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UsersLicenseKeysListQueryParamOrganizationIDFilter$ {
    /** @deprecated use `UsersLicenseKeysListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UsersLicenseKeysListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `UsersLicenseKeysListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UsersLicenseKeysListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, UsersLicenseKeysListQueryParamOrganizationIDFilter>;
    /** @deprecated use `UsersLicenseKeysListQueryParamOrganizationIDFilter$Outbound` instead. */
    type Outbound = UsersLicenseKeysListQueryParamOrganizationIDFilter$Outbound;
}
/** @internal */
export declare const UsersLicenseKeysListRequest$inboundSchema: z.ZodType<UsersLicenseKeysListRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UsersLicenseKeysListRequest$Outbound = {
    organization_id?: string | Array<string> | null | undefined;
    benefit_id?: string | null | undefined;
    page: number;
    limit: number;
};
/** @internal */
export declare const UsersLicenseKeysListRequest$outboundSchema: z.ZodType<UsersLicenseKeysListRequest$Outbound, z.ZodTypeDef, UsersLicenseKeysListRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UsersLicenseKeysListRequest$ {
    /** @deprecated use `UsersLicenseKeysListRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UsersLicenseKeysListRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UsersLicenseKeysListRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UsersLicenseKeysListRequest$Outbound, z.ZodTypeDef, UsersLicenseKeysListRequest>;
    /** @deprecated use `UsersLicenseKeysListRequest$Outbound` instead. */
    type Outbound = UsersLicenseKeysListRequest$Outbound;
}
/** @internal */
export declare const UsersLicenseKeysListResponse$inboundSchema: z.ZodType<UsersLicenseKeysListResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type UsersLicenseKeysListResponse$Outbound = {
    Result: components.ListResourceLicenseKeyRead$Outbound;
};
/** @internal */
export declare const UsersLicenseKeysListResponse$outboundSchema: z.ZodType<UsersLicenseKeysListResponse$Outbound, z.ZodTypeDef, UsersLicenseKeysListResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UsersLicenseKeysListResponse$ {
    /** @deprecated use `UsersLicenseKeysListResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UsersLicenseKeysListResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `UsersLicenseKeysListResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UsersLicenseKeysListResponse$Outbound, z.ZodTypeDef, UsersLicenseKeysListResponse>;
    /** @deprecated use `UsersLicenseKeysListResponse$Outbound` instead. */
    type Outbound = UsersLicenseKeysListResponse$Outbound;
}
//# sourceMappingURL=userslicensekeyslist.d.ts.map