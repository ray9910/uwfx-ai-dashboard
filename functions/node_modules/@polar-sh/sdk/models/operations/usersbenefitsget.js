"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UsersBenefitsGetResponseUsersBenefitsGet$ = exports.UsersBenefitsGetResponseUsersBenefitsGet$outboundSchema = exports.UsersBenefitsGetResponseUsersBenefitsGet$inboundSchema = exports.UsersBenefitsGetRequest$ = exports.UsersBenefitsGetRequest$outboundSchema = exports.UsersBenefitsGetRequest$inboundSchema = void 0;
const z = __importStar(require("zod"));
const components = __importStar(require("../components/index.js"));
/** @internal */
exports.UsersBenefitsGetRequest$inboundSchema = z.object({
    id: z.string(),
});
/** @internal */
exports.UsersBenefitsGetRequest$outboundSchema = z.object({
    id: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UsersBenefitsGetRequest$;
(function (UsersBenefitsGetRequest$) {
    /** @deprecated use `UsersBenefitsGetRequest$inboundSchema` instead. */
    UsersBenefitsGetRequest$.inboundSchema = exports.UsersBenefitsGetRequest$inboundSchema;
    /** @deprecated use `UsersBenefitsGetRequest$outboundSchema` instead. */
    UsersBenefitsGetRequest$.outboundSchema = exports.UsersBenefitsGetRequest$outboundSchema;
})(UsersBenefitsGetRequest$ || (exports.UsersBenefitsGetRequest$ = UsersBenefitsGetRequest$ = {}));
/** @internal */
exports.UsersBenefitsGetResponseUsersBenefitsGet$inboundSchema = z.union([
    components.BenefitArticlesSubscriber$inboundSchema.and(z.object({ type: z.literal("articles") }).transform((v) => ({
        type: v.type,
    }))),
    components.BenefitDiscordSubscriber$inboundSchema.and(z.object({ type: z.literal("discord") }).transform((v) => ({
        type: v.type,
    }))),
    components.BenefitGitHubRepositorySubscriber$inboundSchema.and(z.object({ type: z.literal("github_repository") }).transform((v) => ({
        type: v.type,
    }))),
    components.BenefitDownloadablesSubscriber$inboundSchema.and(z.object({ type: z.literal("downloadables") }).transform((v) => ({
        type: v.type,
    }))),
    components.BenefitAdsSubscriber$inboundSchema.and(z.object({ type: z.literal("ads") }).transform((v) => ({ type: v.type }))),
    components.BenefitCustomSubscriber$inboundSchema.and(z.object({ type: z.literal("custom") }).transform((v) => ({
        type: v.type,
    }))),
    components.BenefitLicenseKeysSubscriber$inboundSchema.and(z.object({ type: z.literal("license_keys") }).transform((v) => ({
        type: v.type,
    }))),
]);
/** @internal */
exports.UsersBenefitsGetResponseUsersBenefitsGet$outboundSchema = z.union([
    components.BenefitArticlesSubscriber$outboundSchema.and(z.object({ type: z.literal("articles") }).transform((v) => ({
        type: v.type,
    }))),
    components.BenefitDiscordSubscriber$outboundSchema.and(z.object({ type: z.literal("discord") }).transform((v) => ({
        type: v.type,
    }))),
    components.BenefitGitHubRepositorySubscriber$outboundSchema.and(z.object({ type: z.literal("github_repository") }).transform((v) => ({
        type: v.type,
    }))),
    components.BenefitDownloadablesSubscriber$outboundSchema.and(z.object({ type: z.literal("downloadables") }).transform((v) => ({
        type: v.type,
    }))),
    components.BenefitAdsSubscriber$outboundSchema.and(z.object({ type: z.literal("ads") }).transform((v) => ({ type: v.type }))),
    components.BenefitCustomSubscriber$outboundSchema.and(z.object({ type: z.literal("custom") }).transform((v) => ({
        type: v.type,
    }))),
    components.BenefitLicenseKeysSubscriber$outboundSchema.and(z.object({ type: z.literal("license_keys") }).transform((v) => ({
        type: v.type,
    }))),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UsersBenefitsGetResponseUsersBenefitsGet$;
(function (UsersBenefitsGetResponseUsersBenefitsGet$) {
    /** @deprecated use `UsersBenefitsGetResponseUsersBenefitsGet$inboundSchema` instead. */
    UsersBenefitsGetResponseUsersBenefitsGet$.inboundSchema = exports.UsersBenefitsGetResponseUsersBenefitsGet$inboundSchema;
    /** @deprecated use `UsersBenefitsGetResponseUsersBenefitsGet$outboundSchema` instead. */
    UsersBenefitsGetResponseUsersBenefitsGet$.outboundSchema = exports.UsersBenefitsGetResponseUsersBenefitsGet$outboundSchema;
})(UsersBenefitsGetResponseUsersBenefitsGet$ || (exports.UsersBenefitsGetResponseUsersBenefitsGet$ = UsersBenefitsGetResponseUsersBenefitsGet$ = {}));
//# sourceMappingURL=usersbenefitsget.js.map