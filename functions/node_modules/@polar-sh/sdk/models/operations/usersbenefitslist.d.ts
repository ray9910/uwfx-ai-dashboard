import * as z from "zod";
import * as components from "../components/index.js";
/**
 * Filter by benefit type.
 */
export type BenefitTypeFilter = components.BenefitType | Array<components.BenefitType>;
/**
 * Filter by organization ID.
 */
export type OrganizationIDFilter = string | Array<string>;
/**
 * Filter by order ID.
 */
export type OrderIDFilter = string | Array<string>;
/**
 * Filter by subscription ID.
 */
export type SubscriptionIDFilter = string | Array<string>;
export type UsersBenefitsListRequest = {
    /**
     * Filter by benefit type.
     */
    typeFilter?: components.BenefitType | Array<components.BenefitType> | null | undefined;
    /**
     * Filter by organization ID.
     */
    organizationId?: string | Array<string> | null | undefined;
    /**
     * Filter by order ID.
     */
    orderId?: string | Array<string> | null | undefined;
    /**
     * Filter by subscription ID.
     */
    subscriptionId?: string | Array<string> | null | undefined;
    /**
     * Page number, defaults to 1.
     */
    page?: number | undefined;
    /**
     * Size of a page, defaults to 10. Maximum is 100.
     */
    limit?: number | undefined;
    /**
     * Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.
     */
    sorting?: Array<components.UserBenefitSortProperty> | null | undefined;
};
export type UsersBenefitsListResponse = {
    result: components.ListResourceUserBenefit;
};
/** @internal */
export declare const BenefitTypeFilter$inboundSchema: z.ZodType<BenefitTypeFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type BenefitTypeFilter$Outbound = string | Array<string>;
/** @internal */
export declare const BenefitTypeFilter$outboundSchema: z.ZodType<BenefitTypeFilter$Outbound, z.ZodTypeDef, BenefitTypeFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BenefitTypeFilter$ {
    /** @deprecated use `BenefitTypeFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BenefitTypeFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `BenefitTypeFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BenefitTypeFilter$Outbound, z.ZodTypeDef, BenefitTypeFilter>;
    /** @deprecated use `BenefitTypeFilter$Outbound` instead. */
    type Outbound = BenefitTypeFilter$Outbound;
}
/** @internal */
export declare const OrganizationIDFilter$inboundSchema: z.ZodType<OrganizationIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type OrganizationIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const OrganizationIDFilter$outboundSchema: z.ZodType<OrganizationIDFilter$Outbound, z.ZodTypeDef, OrganizationIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrganizationIDFilter$ {
    /** @deprecated use `OrganizationIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrganizationIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrganizationIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrganizationIDFilter$Outbound, z.ZodTypeDef, OrganizationIDFilter>;
    /** @deprecated use `OrganizationIDFilter$Outbound` instead. */
    type Outbound = OrganizationIDFilter$Outbound;
}
/** @internal */
export declare const OrderIDFilter$inboundSchema: z.ZodType<OrderIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type OrderIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const OrderIDFilter$outboundSchema: z.ZodType<OrderIDFilter$Outbound, z.ZodTypeDef, OrderIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace OrderIDFilter$ {
    /** @deprecated use `OrderIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<OrderIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `OrderIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<OrderIDFilter$Outbound, z.ZodTypeDef, OrderIDFilter>;
    /** @deprecated use `OrderIDFilter$Outbound` instead. */
    type Outbound = OrderIDFilter$Outbound;
}
/** @internal */
export declare const SubscriptionIDFilter$inboundSchema: z.ZodType<SubscriptionIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type SubscriptionIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const SubscriptionIDFilter$outboundSchema: z.ZodType<SubscriptionIDFilter$Outbound, z.ZodTypeDef, SubscriptionIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace SubscriptionIDFilter$ {
    /** @deprecated use `SubscriptionIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<SubscriptionIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `SubscriptionIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<SubscriptionIDFilter$Outbound, z.ZodTypeDef, SubscriptionIDFilter>;
    /** @deprecated use `SubscriptionIDFilter$Outbound` instead. */
    type Outbound = SubscriptionIDFilter$Outbound;
}
/** @internal */
export declare const UsersBenefitsListRequest$inboundSchema: z.ZodType<UsersBenefitsListRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UsersBenefitsListRequest$Outbound = {
    type_filter?: string | Array<string> | null | undefined;
    organization_id?: string | Array<string> | null | undefined;
    order_id?: string | Array<string> | null | undefined;
    subscription_id?: string | Array<string> | null | undefined;
    page: number;
    limit: number;
    sorting?: Array<string> | null | undefined;
};
/** @internal */
export declare const UsersBenefitsListRequest$outboundSchema: z.ZodType<UsersBenefitsListRequest$Outbound, z.ZodTypeDef, UsersBenefitsListRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UsersBenefitsListRequest$ {
    /** @deprecated use `UsersBenefitsListRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UsersBenefitsListRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UsersBenefitsListRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UsersBenefitsListRequest$Outbound, z.ZodTypeDef, UsersBenefitsListRequest>;
    /** @deprecated use `UsersBenefitsListRequest$Outbound` instead. */
    type Outbound = UsersBenefitsListRequest$Outbound;
}
/** @internal */
export declare const UsersBenefitsListResponse$inboundSchema: z.ZodType<UsersBenefitsListResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type UsersBenefitsListResponse$Outbound = {
    Result: components.ListResourceUserBenefit$Outbound;
};
/** @internal */
export declare const UsersBenefitsListResponse$outboundSchema: z.ZodType<UsersBenefitsListResponse$Outbound, z.ZodTypeDef, UsersBenefitsListResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UsersBenefitsListResponse$ {
    /** @deprecated use `UsersBenefitsListResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UsersBenefitsListResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `UsersBenefitsListResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UsersBenefitsListResponse$Outbound, z.ZodTypeDef, UsersBenefitsListResponse>;
    /** @deprecated use `UsersBenefitsListResponse$Outbound` instead. */
    type Outbound = UsersBenefitsListResponse$Outbound;
}
//# sourceMappingURL=usersbenefitslist.d.ts.map