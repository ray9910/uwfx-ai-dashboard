"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UsersBenefitsListResponse$ = exports.UsersBenefitsListResponse$outboundSchema = exports.UsersBenefitsListResponse$inboundSchema = exports.UsersBenefitsListRequest$ = exports.UsersBenefitsListRequest$outboundSchema = exports.UsersBenefitsListRequest$inboundSchema = exports.SubscriptionIDFilter$ = exports.SubscriptionIDFilter$outboundSchema = exports.SubscriptionIDFilter$inboundSchema = exports.OrderIDFilter$ = exports.OrderIDFilter$outboundSchema = exports.OrderIDFilter$inboundSchema = exports.OrganizationIDFilter$ = exports.OrganizationIDFilter$outboundSchema = exports.OrganizationIDFilter$inboundSchema = exports.BenefitTypeFilter$ = exports.BenefitTypeFilter$outboundSchema = exports.BenefitTypeFilter$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const components = __importStar(require("../components/index.js"));
/** @internal */
exports.BenefitTypeFilter$inboundSchema = z.union([
    components.BenefitType$inboundSchema,
    z.array(components.BenefitType$inboundSchema),
]);
/** @internal */
exports.BenefitTypeFilter$outboundSchema = z.union([
    components.BenefitType$outboundSchema,
    z.array(components.BenefitType$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var BenefitTypeFilter$;
(function (BenefitTypeFilter$) {
    /** @deprecated use `BenefitTypeFilter$inboundSchema` instead. */
    BenefitTypeFilter$.inboundSchema = exports.BenefitTypeFilter$inboundSchema;
    /** @deprecated use `BenefitTypeFilter$outboundSchema` instead. */
    BenefitTypeFilter$.outboundSchema = exports.BenefitTypeFilter$outboundSchema;
})(BenefitTypeFilter$ || (exports.BenefitTypeFilter$ = BenefitTypeFilter$ = {}));
/** @internal */
exports.OrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.OrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrganizationIDFilter$;
(function (OrganizationIDFilter$) {
    /** @deprecated use `OrganizationIDFilter$inboundSchema` instead. */
    OrganizationIDFilter$.inboundSchema = exports.OrganizationIDFilter$inboundSchema;
    /** @deprecated use `OrganizationIDFilter$outboundSchema` instead. */
    OrganizationIDFilter$.outboundSchema = exports.OrganizationIDFilter$outboundSchema;
})(OrganizationIDFilter$ || (exports.OrganizationIDFilter$ = OrganizationIDFilter$ = {}));
/** @internal */
exports.OrderIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.OrderIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var OrderIDFilter$;
(function (OrderIDFilter$) {
    /** @deprecated use `OrderIDFilter$inboundSchema` instead. */
    OrderIDFilter$.inboundSchema = exports.OrderIDFilter$inboundSchema;
    /** @deprecated use `OrderIDFilter$outboundSchema` instead. */
    OrderIDFilter$.outboundSchema = exports.OrderIDFilter$outboundSchema;
})(OrderIDFilter$ || (exports.OrderIDFilter$ = OrderIDFilter$ = {}));
/** @internal */
exports.SubscriptionIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.SubscriptionIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var SubscriptionIDFilter$;
(function (SubscriptionIDFilter$) {
    /** @deprecated use `SubscriptionIDFilter$inboundSchema` instead. */
    SubscriptionIDFilter$.inboundSchema = exports.SubscriptionIDFilter$inboundSchema;
    /** @deprecated use `SubscriptionIDFilter$outboundSchema` instead. */
    SubscriptionIDFilter$.outboundSchema = exports.SubscriptionIDFilter$outboundSchema;
})(SubscriptionIDFilter$ || (exports.SubscriptionIDFilter$ = SubscriptionIDFilter$ = {}));
/** @internal */
exports.UsersBenefitsListRequest$inboundSchema = z.object({
    type_filter: z.nullable(z.union([
        components.BenefitType$inboundSchema,
        z.array(components.BenefitType$inboundSchema),
    ])).optional(),
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    order_id: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    subscription_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(components.UserBenefitSortProperty$inboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "type_filter": "typeFilter",
        "organization_id": "organizationId",
        "order_id": "orderId",
        "subscription_id": "subscriptionId",
    });
});
/** @internal */
exports.UsersBenefitsListRequest$outboundSchema = z.object({
    typeFilter: z.nullable(z.union([
        components.BenefitType$outboundSchema,
        z.array(components.BenefitType$outboundSchema),
    ])).optional(),
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    orderId: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    subscriptionId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(components.UserBenefitSortProperty$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        typeFilter: "type_filter",
        organizationId: "organization_id",
        orderId: "order_id",
        subscriptionId: "subscription_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UsersBenefitsListRequest$;
(function (UsersBenefitsListRequest$) {
    /** @deprecated use `UsersBenefitsListRequest$inboundSchema` instead. */
    UsersBenefitsListRequest$.inboundSchema = exports.UsersBenefitsListRequest$inboundSchema;
    /** @deprecated use `UsersBenefitsListRequest$outboundSchema` instead. */
    UsersBenefitsListRequest$.outboundSchema = exports.UsersBenefitsListRequest$outboundSchema;
})(UsersBenefitsListRequest$ || (exports.UsersBenefitsListRequest$ = UsersBenefitsListRequest$ = {}));
/** @internal */
exports.UsersBenefitsListResponse$inboundSchema = z.object({
    Result: components.ListResourceUserBenefit$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.UsersBenefitsListResponse$outboundSchema = z.object({
    result: components.ListResourceUserBenefit$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UsersBenefitsListResponse$;
(function (UsersBenefitsListResponse$) {
    /** @deprecated use `UsersBenefitsListResponse$inboundSchema` instead. */
    UsersBenefitsListResponse$.inboundSchema = exports.UsersBenefitsListResponse$inboundSchema;
    /** @deprecated use `UsersBenefitsListResponse$outboundSchema` instead. */
    UsersBenefitsListResponse$.outboundSchema = exports.UsersBenefitsListResponse$outboundSchema;
})(UsersBenefitsListResponse$ || (exports.UsersBenefitsListResponse$ = UsersBenefitsListResponse$ = {}));
//# sourceMappingURL=usersbenefitslist.js.map