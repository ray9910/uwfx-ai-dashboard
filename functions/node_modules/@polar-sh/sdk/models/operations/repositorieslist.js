"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RepositoriesListResponse$ = exports.RepositoriesListResponse$outboundSchema = exports.RepositoriesListResponse$inboundSchema = exports.RepositoriesListRequest$ = exports.RepositoriesListRequest$outboundSchema = exports.RepositoriesListRequest$inboundSchema = exports.RepositoriesListQueryParamOrganizationIDFilter$ = exports.RepositoriesListQueryParamOrganizationIDFilter$outboundSchema = exports.RepositoriesListQueryParamOrganizationIDFilter$inboundSchema = exports.ExternalOrganizationNameFilter$ = exports.ExternalOrganizationNameFilter$outboundSchema = exports.ExternalOrganizationNameFilter$inboundSchema = exports.QueryParamRepositoryNameFilter$ = exports.QueryParamRepositoryNameFilter$outboundSchema = exports.QueryParamRepositoryNameFilter$inboundSchema = exports.QueryParamPlatformFilter$ = exports.QueryParamPlatformFilter$outboundSchema = exports.QueryParamPlatformFilter$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const components = __importStar(require("../components/index.js"));
/** @internal */
exports.QueryParamPlatformFilter$inboundSchema = z.union([
    components.Platforms$inboundSchema,
    z.array(components.Platforms$inboundSchema),
]);
/** @internal */
exports.QueryParamPlatformFilter$outboundSchema = z.union([
    components.Platforms$outboundSchema,
    z.array(components.Platforms$outboundSchema),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var QueryParamPlatformFilter$;
(function (QueryParamPlatformFilter$) {
    /** @deprecated use `QueryParamPlatformFilter$inboundSchema` instead. */
    QueryParamPlatformFilter$.inboundSchema = exports.QueryParamPlatformFilter$inboundSchema;
    /** @deprecated use `QueryParamPlatformFilter$outboundSchema` instead. */
    QueryParamPlatformFilter$.outboundSchema = exports.QueryParamPlatformFilter$outboundSchema;
})(QueryParamPlatformFilter$ || (exports.QueryParamPlatformFilter$ = QueryParamPlatformFilter$ = {}));
/** @internal */
exports.QueryParamRepositoryNameFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.QueryParamRepositoryNameFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var QueryParamRepositoryNameFilter$;
(function (QueryParamRepositoryNameFilter$) {
    /** @deprecated use `QueryParamRepositoryNameFilter$inboundSchema` instead. */
    QueryParamRepositoryNameFilter$.inboundSchema = exports.QueryParamRepositoryNameFilter$inboundSchema;
    /** @deprecated use `QueryParamRepositoryNameFilter$outboundSchema` instead. */
    QueryParamRepositoryNameFilter$.outboundSchema = exports.QueryParamRepositoryNameFilter$outboundSchema;
})(QueryParamRepositoryNameFilter$ || (exports.QueryParamRepositoryNameFilter$ = QueryParamRepositoryNameFilter$ = {}));
/** @internal */
exports.ExternalOrganizationNameFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.ExternalOrganizationNameFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ExternalOrganizationNameFilter$;
(function (ExternalOrganizationNameFilter$) {
    /** @deprecated use `ExternalOrganizationNameFilter$inboundSchema` instead. */
    ExternalOrganizationNameFilter$.inboundSchema = exports.ExternalOrganizationNameFilter$inboundSchema;
    /** @deprecated use `ExternalOrganizationNameFilter$outboundSchema` instead. */
    ExternalOrganizationNameFilter$.outboundSchema = exports.ExternalOrganizationNameFilter$outboundSchema;
})(ExternalOrganizationNameFilter$ || (exports.ExternalOrganizationNameFilter$ = ExternalOrganizationNameFilter$ = {}));
/** @internal */
exports.RepositoriesListQueryParamOrganizationIDFilter$inboundSchema = z.union([z.string(), z.array(z.string())]);
/** @internal */
exports.RepositoriesListQueryParamOrganizationIDFilter$outboundSchema = z.union([z.string(), z.array(z.string())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RepositoriesListQueryParamOrganizationIDFilter$;
(function (RepositoriesListQueryParamOrganizationIDFilter$) {
    /** @deprecated use `RepositoriesListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    RepositoriesListQueryParamOrganizationIDFilter$.inboundSchema = exports.RepositoriesListQueryParamOrganizationIDFilter$inboundSchema;
    /** @deprecated use `RepositoriesListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    RepositoriesListQueryParamOrganizationIDFilter$.outboundSchema = exports.RepositoriesListQueryParamOrganizationIDFilter$outboundSchema;
})(RepositoriesListQueryParamOrganizationIDFilter$ || (exports.RepositoriesListQueryParamOrganizationIDFilter$ = RepositoriesListQueryParamOrganizationIDFilter$ = {}));
/** @internal */
exports.RepositoriesListRequest$inboundSchema = z.object({
    platform: z.nullable(z.union([
        components.Platforms$inboundSchema,
        z.array(components.Platforms$inboundSchema),
    ])).optional(),
    name: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    external_organization_name: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    is_private: z.nullable(z.boolean()).optional(),
    organization_id: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(components.RepositorySortProperty$inboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "external_organization_name": "externalOrganizationName",
        "is_private": "isPrivate",
        "organization_id": "organizationId",
    });
});
/** @internal */
exports.RepositoriesListRequest$outboundSchema = z.object({
    platform: z.nullable(z.union([
        components.Platforms$outboundSchema,
        z.array(components.Platforms$outboundSchema),
    ])).optional(),
    name: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    externalOrganizationName: z.nullable(z.union([z.string(), z.array(z.string())])).optional(),
    isPrivate: z.nullable(z.boolean()).optional(),
    organizationId: z.nullable(z.union([z.string(), z.array(z.string())]))
        .optional(),
    page: z.number().int().default(1),
    limit: z.number().int().default(10),
    sorting: z.nullable(z.array(components.RepositorySortProperty$outboundSchema))
        .optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        externalOrganizationName: "external_organization_name",
        isPrivate: "is_private",
        organizationId: "organization_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RepositoriesListRequest$;
(function (RepositoriesListRequest$) {
    /** @deprecated use `RepositoriesListRequest$inboundSchema` instead. */
    RepositoriesListRequest$.inboundSchema = exports.RepositoriesListRequest$inboundSchema;
    /** @deprecated use `RepositoriesListRequest$outboundSchema` instead. */
    RepositoriesListRequest$.outboundSchema = exports.RepositoriesListRequest$outboundSchema;
})(RepositoriesListRequest$ || (exports.RepositoriesListRequest$ = RepositoriesListRequest$ = {}));
/** @internal */
exports.RepositoriesListResponse$inboundSchema = z.object({
    Result: components.ListResourceRepository$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "Result": "result",
    });
});
/** @internal */
exports.RepositoriesListResponse$outboundSchema = z.object({
    result: components.ListResourceRepository$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        result: "Result",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RepositoriesListResponse$;
(function (RepositoriesListResponse$) {
    /** @deprecated use `RepositoriesListResponse$inboundSchema` instead. */
    RepositoriesListResponse$.inboundSchema = exports.RepositoriesListResponse$inboundSchema;
    /** @deprecated use `RepositoriesListResponse$outboundSchema` instead. */
    RepositoriesListResponse$.outboundSchema = exports.RepositoriesListResponse$outboundSchema;
})(RepositoriesListResponse$ || (exports.RepositoriesListResponse$ = RepositoriesListResponse$ = {}));
//# sourceMappingURL=repositorieslist.js.map