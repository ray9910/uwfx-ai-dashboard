import * as z from "zod";
import * as components from "../components/index.js";
/**
 * Filter by organization ID.
 */
export type ArticlesListQueryParamOrganizationIDFilter = string | Array<string>;
/**
 * Filter by visibility.
 */
export type ArticleVisibilityFilter = components.ArticleVisibility | Array<components.ArticleVisibility>;
export type ArticlesListRequest = {
    /**
     * Filter by organization ID.
     */
    organizationId?: string | Array<string> | null | undefined;
    /**
     * Filter by slug.
     */
    slug?: string | null | undefined;
    /**
     * Filter by visibility.
     */
    visibility?: components.ArticleVisibility | Array<components.ArticleVisibility> | null | undefined;
    /**
     * Filter by subscription status.
     */
    isSubscribed?: boolean | null | undefined;
    /**
     * Filter by published status.
     */
    isPublished?: boolean | null | undefined;
    /**
     * Filter by pinned status.
     */
    isPinned?: boolean | null | undefined;
    /**
     * Page number, defaults to 1.
     */
    page?: number | undefined;
    /**
     * Size of a page, defaults to 10. Maximum is 100.
     */
    limit?: number | undefined;
};
export type ArticlesListResponse = {
    result: components.ListResourceArticle;
};
/** @internal */
export declare const ArticlesListQueryParamOrganizationIDFilter$inboundSchema: z.ZodType<ArticlesListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type ArticlesListQueryParamOrganizationIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const ArticlesListQueryParamOrganizationIDFilter$outboundSchema: z.ZodType<ArticlesListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, ArticlesListQueryParamOrganizationIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ArticlesListQueryParamOrganizationIDFilter$ {
    /** @deprecated use `ArticlesListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ArticlesListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `ArticlesListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ArticlesListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, ArticlesListQueryParamOrganizationIDFilter>;
    /** @deprecated use `ArticlesListQueryParamOrganizationIDFilter$Outbound` instead. */
    type Outbound = ArticlesListQueryParamOrganizationIDFilter$Outbound;
}
/** @internal */
export declare const ArticleVisibilityFilter$inboundSchema: z.ZodType<ArticleVisibilityFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type ArticleVisibilityFilter$Outbound = string | Array<string>;
/** @internal */
export declare const ArticleVisibilityFilter$outboundSchema: z.ZodType<ArticleVisibilityFilter$Outbound, z.ZodTypeDef, ArticleVisibilityFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ArticleVisibilityFilter$ {
    /** @deprecated use `ArticleVisibilityFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ArticleVisibilityFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `ArticleVisibilityFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ArticleVisibilityFilter$Outbound, z.ZodTypeDef, ArticleVisibilityFilter>;
    /** @deprecated use `ArticleVisibilityFilter$Outbound` instead. */
    type Outbound = ArticleVisibilityFilter$Outbound;
}
/** @internal */
export declare const ArticlesListRequest$inboundSchema: z.ZodType<ArticlesListRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ArticlesListRequest$Outbound = {
    organization_id?: string | Array<string> | null | undefined;
    slug?: string | null | undefined;
    visibility?: string | Array<string> | null | undefined;
    is_subscribed?: boolean | null | undefined;
    is_published?: boolean | null | undefined;
    is_pinned?: boolean | null | undefined;
    page: number;
    limit: number;
};
/** @internal */
export declare const ArticlesListRequest$outboundSchema: z.ZodType<ArticlesListRequest$Outbound, z.ZodTypeDef, ArticlesListRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ArticlesListRequest$ {
    /** @deprecated use `ArticlesListRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ArticlesListRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ArticlesListRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ArticlesListRequest$Outbound, z.ZodTypeDef, ArticlesListRequest>;
    /** @deprecated use `ArticlesListRequest$Outbound` instead. */
    type Outbound = ArticlesListRequest$Outbound;
}
/** @internal */
export declare const ArticlesListResponse$inboundSchema: z.ZodType<ArticlesListResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type ArticlesListResponse$Outbound = {
    Result: components.ListResourceArticle$Outbound;
};
/** @internal */
export declare const ArticlesListResponse$outboundSchema: z.ZodType<ArticlesListResponse$Outbound, z.ZodTypeDef, ArticlesListResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ArticlesListResponse$ {
    /** @deprecated use `ArticlesListResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ArticlesListResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `ArticlesListResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ArticlesListResponse$Outbound, z.ZodTypeDef, ArticlesListResponse>;
    /** @deprecated use `ArticlesListResponse$Outbound` instead. */
    type Outbound = ArticlesListResponse$Outbound;
}
//# sourceMappingURL=articleslist.d.ts.map