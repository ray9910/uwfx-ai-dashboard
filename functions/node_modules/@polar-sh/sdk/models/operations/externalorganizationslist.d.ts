import * as z from "zod";
import * as components from "../components/index.js";
/**
 * Filter by platform.
 */
export type PlatformFilter = components.Platforms | Array<components.Platforms>;
/**
 * Filter by name.
 */
export type RepositoryNameFilter = string | Array<string>;
/**
 * Filter by organization ID.
 */
export type ExternalOrganizationsListQueryParamOrganizationIDFilter = string | Array<string>;
export type ExternalOrganizationsListRequest = {
    /**
     * Filter by platform.
     */
    platform?: components.Platforms | Array<components.Platforms> | null | undefined;
    /**
     * Filter by name.
     */
    name?: string | Array<string> | null | undefined;
    /**
     * Filter by organization ID.
     */
    organizationId?: string | Array<string> | null | undefined;
    /**
     * Page number, defaults to 1.
     */
    page?: number | undefined;
    /**
     * Size of a page, defaults to 10. Maximum is 100.
     */
    limit?: number | undefined;
    /**
     * Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.
     */
    sorting?: Array<components.ExternalOrganizationSortProperty> | null | undefined;
};
export type ExternalOrganizationsListResponse = {
    result: components.ListResourceExternalOrganization;
};
/** @internal */
export declare const PlatformFilter$inboundSchema: z.ZodType<PlatformFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type PlatformFilter$Outbound = string | Array<string>;
/** @internal */
export declare const PlatformFilter$outboundSchema: z.ZodType<PlatformFilter$Outbound, z.ZodTypeDef, PlatformFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PlatformFilter$ {
    /** @deprecated use `PlatformFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PlatformFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `PlatformFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PlatformFilter$Outbound, z.ZodTypeDef, PlatformFilter>;
    /** @deprecated use `PlatformFilter$Outbound` instead. */
    type Outbound = PlatformFilter$Outbound;
}
/** @internal */
export declare const RepositoryNameFilter$inboundSchema: z.ZodType<RepositoryNameFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type RepositoryNameFilter$Outbound = string | Array<string>;
/** @internal */
export declare const RepositoryNameFilter$outboundSchema: z.ZodType<RepositoryNameFilter$Outbound, z.ZodTypeDef, RepositoryNameFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RepositoryNameFilter$ {
    /** @deprecated use `RepositoryNameFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RepositoryNameFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `RepositoryNameFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RepositoryNameFilter$Outbound, z.ZodTypeDef, RepositoryNameFilter>;
    /** @deprecated use `RepositoryNameFilter$Outbound` instead. */
    type Outbound = RepositoryNameFilter$Outbound;
}
/** @internal */
export declare const ExternalOrganizationsListQueryParamOrganizationIDFilter$inboundSchema: z.ZodType<ExternalOrganizationsListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type ExternalOrganizationsListQueryParamOrganizationIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const ExternalOrganizationsListQueryParamOrganizationIDFilter$outboundSchema: z.ZodType<ExternalOrganizationsListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, ExternalOrganizationsListQueryParamOrganizationIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ExternalOrganizationsListQueryParamOrganizationIDFilter$ {
    /** @deprecated use `ExternalOrganizationsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ExternalOrganizationsListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `ExternalOrganizationsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ExternalOrganizationsListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, ExternalOrganizationsListQueryParamOrganizationIDFilter>;
    /** @deprecated use `ExternalOrganizationsListQueryParamOrganizationIDFilter$Outbound` instead. */
    type Outbound = ExternalOrganizationsListQueryParamOrganizationIDFilter$Outbound;
}
/** @internal */
export declare const ExternalOrganizationsListRequest$inboundSchema: z.ZodType<ExternalOrganizationsListRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type ExternalOrganizationsListRequest$Outbound = {
    platform?: string | Array<string> | null | undefined;
    name?: string | Array<string> | null | undefined;
    organization_id?: string | Array<string> | null | undefined;
    page: number;
    limit: number;
    sorting?: Array<string> | null | undefined;
};
/** @internal */
export declare const ExternalOrganizationsListRequest$outboundSchema: z.ZodType<ExternalOrganizationsListRequest$Outbound, z.ZodTypeDef, ExternalOrganizationsListRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ExternalOrganizationsListRequest$ {
    /** @deprecated use `ExternalOrganizationsListRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ExternalOrganizationsListRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `ExternalOrganizationsListRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ExternalOrganizationsListRequest$Outbound, z.ZodTypeDef, ExternalOrganizationsListRequest>;
    /** @deprecated use `ExternalOrganizationsListRequest$Outbound` instead. */
    type Outbound = ExternalOrganizationsListRequest$Outbound;
}
/** @internal */
export declare const ExternalOrganizationsListResponse$inboundSchema: z.ZodType<ExternalOrganizationsListResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type ExternalOrganizationsListResponse$Outbound = {
    Result: components.ListResourceExternalOrganization$Outbound;
};
/** @internal */
export declare const ExternalOrganizationsListResponse$outboundSchema: z.ZodType<ExternalOrganizationsListResponse$Outbound, z.ZodTypeDef, ExternalOrganizationsListResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ExternalOrganizationsListResponse$ {
    /** @deprecated use `ExternalOrganizationsListResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ExternalOrganizationsListResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `ExternalOrganizationsListResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ExternalOrganizationsListResponse$Outbound, z.ZodTypeDef, ExternalOrganizationsListResponse>;
    /** @deprecated use `ExternalOrganizationsListResponse$Outbound` instead. */
    type Outbound = ExternalOrganizationsListResponse$Outbound;
}
//# sourceMappingURL=externalorganizationslist.d.ts.map