import * as z from "zod";
import * as components from "../components/index.js";
/**
 * Filter by organization ID.
 */
export type UsersSubscriptionsListQueryParamOrganizationIDFilter = string | Array<string>;
/**
 * Filter by product ID.
 */
export type QueryParamProductIDFilter = string | Array<string>;
export type UsersSubscriptionsListRequest = {
    /**
     * Filter by organization ID.
     */
    organizationId?: string | Array<string> | null | undefined;
    /**
     * Filter by product ID.
     */
    productId?: string | Array<string> | null | undefined;
    /**
     * Filter by active or cancelled subscription.
     */
    active?: boolean | null | undefined;
    /**
     * Search by product or organization name.
     */
    query?: string | null | undefined;
    /**
     * Page number, defaults to 1.
     */
    page?: number | undefined;
    /**
     * Size of a page, defaults to 10. Maximum is 100.
     */
    limit?: number | undefined;
    /**
     * Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.
     */
    sorting?: Array<components.UserSubscriptionSortProperty> | null | undefined;
};
export type UsersSubscriptionsListResponse = {
    result: components.ListResourceUserSubscription;
};
/** @internal */
export declare const UsersSubscriptionsListQueryParamOrganizationIDFilter$inboundSchema: z.ZodType<UsersSubscriptionsListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type UsersSubscriptionsListQueryParamOrganizationIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const UsersSubscriptionsListQueryParamOrganizationIDFilter$outboundSchema: z.ZodType<UsersSubscriptionsListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, UsersSubscriptionsListQueryParamOrganizationIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UsersSubscriptionsListQueryParamOrganizationIDFilter$ {
    /** @deprecated use `UsersSubscriptionsListQueryParamOrganizationIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UsersSubscriptionsListQueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `UsersSubscriptionsListQueryParamOrganizationIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UsersSubscriptionsListQueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, UsersSubscriptionsListQueryParamOrganizationIDFilter>;
    /** @deprecated use `UsersSubscriptionsListQueryParamOrganizationIDFilter$Outbound` instead. */
    type Outbound = UsersSubscriptionsListQueryParamOrganizationIDFilter$Outbound;
}
/** @internal */
export declare const QueryParamProductIDFilter$inboundSchema: z.ZodType<QueryParamProductIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryParamProductIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const QueryParamProductIDFilter$outboundSchema: z.ZodType<QueryParamProductIDFilter$Outbound, z.ZodTypeDef, QueryParamProductIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryParamProductIDFilter$ {
    /** @deprecated use `QueryParamProductIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryParamProductIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryParamProductIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryParamProductIDFilter$Outbound, z.ZodTypeDef, QueryParamProductIDFilter>;
    /** @deprecated use `QueryParamProductIDFilter$Outbound` instead. */
    type Outbound = QueryParamProductIDFilter$Outbound;
}
/** @internal */
export declare const UsersSubscriptionsListRequest$inboundSchema: z.ZodType<UsersSubscriptionsListRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UsersSubscriptionsListRequest$Outbound = {
    organization_id?: string | Array<string> | null | undefined;
    product_id?: string | Array<string> | null | undefined;
    active?: boolean | null | undefined;
    query?: string | null | undefined;
    page: number;
    limit: number;
    sorting?: Array<string> | null | undefined;
};
/** @internal */
export declare const UsersSubscriptionsListRequest$outboundSchema: z.ZodType<UsersSubscriptionsListRequest$Outbound, z.ZodTypeDef, UsersSubscriptionsListRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UsersSubscriptionsListRequest$ {
    /** @deprecated use `UsersSubscriptionsListRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UsersSubscriptionsListRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UsersSubscriptionsListRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UsersSubscriptionsListRequest$Outbound, z.ZodTypeDef, UsersSubscriptionsListRequest>;
    /** @deprecated use `UsersSubscriptionsListRequest$Outbound` instead. */
    type Outbound = UsersSubscriptionsListRequest$Outbound;
}
/** @internal */
export declare const UsersSubscriptionsListResponse$inboundSchema: z.ZodType<UsersSubscriptionsListResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type UsersSubscriptionsListResponse$Outbound = {
    Result: components.ListResourceUserSubscription$Outbound;
};
/** @internal */
export declare const UsersSubscriptionsListResponse$outboundSchema: z.ZodType<UsersSubscriptionsListResponse$Outbound, z.ZodTypeDef, UsersSubscriptionsListResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UsersSubscriptionsListResponse$ {
    /** @deprecated use `UsersSubscriptionsListResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UsersSubscriptionsListResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `UsersSubscriptionsListResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UsersSubscriptionsListResponse$Outbound, z.ZodTypeDef, UsersSubscriptionsListResponse>;
    /** @deprecated use `UsersSubscriptionsListResponse$Outbound` instead. */
    type Outbound = UsersSubscriptionsListResponse$Outbound;
}
//# sourceMappingURL=userssubscriptionslist.d.ts.map