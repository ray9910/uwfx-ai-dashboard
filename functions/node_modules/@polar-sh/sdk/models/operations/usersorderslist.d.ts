import * as z from "zod";
import * as components from "../components/index.js";
/**
 * Filter by organization ID.
 */
export type QueryParamOrganizationIDFilter = string | Array<string>;
/**
 * Filter by product ID.
 */
export type ProductIDFilter = string | Array<string>;
/**
 * Filter by product price type. `recurring` will return orders corresponding to subscriptions creations or renewals. `one_time` will return orders corresponding to one-time purchases.
 */
export type ProductPriceTypeFilter = components.ProductPriceType | Array<components.ProductPriceType>;
/**
 * Filter by subscription ID.
 */
export type QueryParamSubscriptionIDFilter = string | Array<string>;
export type UsersOrdersListRequest = {
    /**
     * Filter by organization ID.
     */
    organizationId?: string | Array<string> | null | undefined;
    /**
     * Filter by product ID.
     */
    productId?: string | Array<string> | null | undefined;
    /**
     * Filter by product price type. `recurring` will return orders corresponding to subscriptions creations or renewals. `one_time` will return orders corresponding to one-time purchases.
     */
    productPriceType?: components.ProductPriceType | Array<components.ProductPriceType> | null | undefined;
    /**
     * Filter by subscription ID.
     */
    subscriptionId?: string | Array<string> | null | undefined;
    /**
     * Search by product or organization name.
     */
    query?: string | null | undefined;
    /**
     * Page number, defaults to 1.
     */
    page?: number | undefined;
    /**
     * Size of a page, defaults to 10. Maximum is 100.
     */
    limit?: number | undefined;
    /**
     * Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.
     */
    sorting?: Array<components.UserOrderSortProperty> | null | undefined;
};
export type UsersOrdersListResponse = {
    result: components.ListResourceUserOrder;
};
/** @internal */
export declare const QueryParamOrganizationIDFilter$inboundSchema: z.ZodType<QueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryParamOrganizationIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const QueryParamOrganizationIDFilter$outboundSchema: z.ZodType<QueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, QueryParamOrganizationIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryParamOrganizationIDFilter$ {
    /** @deprecated use `QueryParamOrganizationIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryParamOrganizationIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryParamOrganizationIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryParamOrganizationIDFilter$Outbound, z.ZodTypeDef, QueryParamOrganizationIDFilter>;
    /** @deprecated use `QueryParamOrganizationIDFilter$Outbound` instead. */
    type Outbound = QueryParamOrganizationIDFilter$Outbound;
}
/** @internal */
export declare const ProductIDFilter$inboundSchema: z.ZodType<ProductIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const ProductIDFilter$outboundSchema: z.ZodType<ProductIDFilter$Outbound, z.ZodTypeDef, ProductIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductIDFilter$ {
    /** @deprecated use `ProductIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductIDFilter$Outbound, z.ZodTypeDef, ProductIDFilter>;
    /** @deprecated use `ProductIDFilter$Outbound` instead. */
    type Outbound = ProductIDFilter$Outbound;
}
/** @internal */
export declare const ProductPriceTypeFilter$inboundSchema: z.ZodType<ProductPriceTypeFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type ProductPriceTypeFilter$Outbound = string | Array<string>;
/** @internal */
export declare const ProductPriceTypeFilter$outboundSchema: z.ZodType<ProductPriceTypeFilter$Outbound, z.ZodTypeDef, ProductPriceTypeFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ProductPriceTypeFilter$ {
    /** @deprecated use `ProductPriceTypeFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ProductPriceTypeFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `ProductPriceTypeFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ProductPriceTypeFilter$Outbound, z.ZodTypeDef, ProductPriceTypeFilter>;
    /** @deprecated use `ProductPriceTypeFilter$Outbound` instead. */
    type Outbound = ProductPriceTypeFilter$Outbound;
}
/** @internal */
export declare const QueryParamSubscriptionIDFilter$inboundSchema: z.ZodType<QueryParamSubscriptionIDFilter, z.ZodTypeDef, unknown>;
/** @internal */
export type QueryParamSubscriptionIDFilter$Outbound = string | Array<string>;
/** @internal */
export declare const QueryParamSubscriptionIDFilter$outboundSchema: z.ZodType<QueryParamSubscriptionIDFilter$Outbound, z.ZodTypeDef, QueryParamSubscriptionIDFilter>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryParamSubscriptionIDFilter$ {
    /** @deprecated use `QueryParamSubscriptionIDFilter$inboundSchema` instead. */
    const inboundSchema: z.ZodType<QueryParamSubscriptionIDFilter, z.ZodTypeDef, unknown>;
    /** @deprecated use `QueryParamSubscriptionIDFilter$outboundSchema` instead. */
    const outboundSchema: z.ZodType<QueryParamSubscriptionIDFilter$Outbound, z.ZodTypeDef, QueryParamSubscriptionIDFilter>;
    /** @deprecated use `QueryParamSubscriptionIDFilter$Outbound` instead. */
    type Outbound = QueryParamSubscriptionIDFilter$Outbound;
}
/** @internal */
export declare const UsersOrdersListRequest$inboundSchema: z.ZodType<UsersOrdersListRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type UsersOrdersListRequest$Outbound = {
    organization_id?: string | Array<string> | null | undefined;
    product_id?: string | Array<string> | null | undefined;
    product_price_type?: string | Array<string> | null | undefined;
    subscription_id?: string | Array<string> | null | undefined;
    query?: string | null | undefined;
    page: number;
    limit: number;
    sorting?: Array<string> | null | undefined;
};
/** @internal */
export declare const UsersOrdersListRequest$outboundSchema: z.ZodType<UsersOrdersListRequest$Outbound, z.ZodTypeDef, UsersOrdersListRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UsersOrdersListRequest$ {
    /** @deprecated use `UsersOrdersListRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UsersOrdersListRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `UsersOrdersListRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UsersOrdersListRequest$Outbound, z.ZodTypeDef, UsersOrdersListRequest>;
    /** @deprecated use `UsersOrdersListRequest$Outbound` instead. */
    type Outbound = UsersOrdersListRequest$Outbound;
}
/** @internal */
export declare const UsersOrdersListResponse$inboundSchema: z.ZodType<UsersOrdersListResponse, z.ZodTypeDef, unknown>;
/** @internal */
export type UsersOrdersListResponse$Outbound = {
    Result: components.ListResourceUserOrder$Outbound;
};
/** @internal */
export declare const UsersOrdersListResponse$outboundSchema: z.ZodType<UsersOrdersListResponse$Outbound, z.ZodTypeDef, UsersOrdersListResponse>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UsersOrdersListResponse$ {
    /** @deprecated use `UsersOrdersListResponse$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UsersOrdersListResponse, z.ZodTypeDef, unknown>;
    /** @deprecated use `UsersOrdersListResponse$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UsersOrdersListResponse$Outbound, z.ZodTypeDef, UsersOrdersListResponse>;
    /** @deprecated use `UsersOrdersListResponse$Outbound` instead. */
    type Outbound = UsersOrdersListResponse$Outbound;
}
//# sourceMappingURL=usersorderslist.d.ts.map