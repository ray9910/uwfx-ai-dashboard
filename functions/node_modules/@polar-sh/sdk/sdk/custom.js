"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Custom = void 0;
const checkoutsCustomClientConfirm_js_1 = require("../funcs/checkoutsCustomClientConfirm.js");
const checkoutsCustomClientGet_js_1 = require("../funcs/checkoutsCustomClientGet.js");
const checkoutsCustomClientUpdate_js_1 = require("../funcs/checkoutsCustomClientUpdate.js");
const checkoutsCustomCreate_js_1 = require("../funcs/checkoutsCustomCreate.js");
const checkoutsCustomGet_js_1 = require("../funcs/checkoutsCustomGet.js");
const checkoutsCustomList_js_1 = require("../funcs/checkoutsCustomList.js");
const checkoutsCustomUpdate_js_1 = require("../funcs/checkoutsCustomUpdate.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
const operations_js_1 = require("../types/operations.js");
class Custom extends sdks_js_1.ClientSDK {
    /**
     * List Checkout Sessions
     *
     * @remarks
     * List checkout sessions.
     */
    async list(request, options) {
        return (0, operations_js_1.unwrapResultIterator)((0, checkoutsCustomList_js_1.checkoutsCustomList)(this, request, options));
    }
    /**
     * Create Checkout Session
     *
     * @remarks
     * Create a checkout session.
     */
    async create(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, checkoutsCustomCreate_js_1.checkoutsCustomCreate)(this, request, options));
    }
    /**
     * Get Checkout Session
     *
     * @remarks
     * Get a checkout session by ID.
     */
    async get(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, checkoutsCustomGet_js_1.checkoutsCustomGet)(this, request, options));
    }
    /**
     * Update Checkout Session
     *
     * @remarks
     * Update a checkout session.
     */
    async update(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, checkoutsCustomUpdate_js_1.checkoutsCustomUpdate)(this, request, options));
    }
    /**
     * Get Checkout Session from Client
     *
     * @remarks
     * Get a checkout session by client secret.
     */
    async clientGet(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, checkoutsCustomClientGet_js_1.checkoutsCustomClientGet)(this, request, options));
    }
    /**
     * Update Checkout Session from Client
     *
     * @remarks
     * Update a checkout session by client secret.
     */
    async clientUpdate(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, checkoutsCustomClientUpdate_js_1.checkoutsCustomClientUpdate)(this, request, options));
    }
    /**
     * Confirm Checkout Session from Client
     *
     * @remarks
     * Confirm a checkout session by client secret.
     *
     * Orders and subscriptions will be processed.
     */
    async clientConfirm(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, checkoutsCustomClientConfirm_js_1.checkoutsCustomClientConfirm)(this, request, options));
    }
}
exports.Custom = Custom;
//# sourceMappingURL=custom.js.map