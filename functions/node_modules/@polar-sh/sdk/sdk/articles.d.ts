import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { PageIterator } from "../types/operations.js";
export declare class Articles extends ClientSDK {
    /**
     * List Articles
     *
     * @remarks
     * List articles.
     */
    list(request: operations.ArticlesListRequest, options?: RequestOptions): Promise<PageIterator<operations.ArticlesListResponse>>;
    /**
     * Create Article
     *
     * @remarks
     * Create an article.
     */
    create(request: components.ArticleCreate, options?: RequestOptions): Promise<components.Article>;
    /**
     * Export Articles
     *
     * @remarks
     * Export organization articles.
     */
    export(request: operations.ArticlesExportRequest, options?: RequestOptions): Promise<any>;
    /**
     * Get Article
     *
     * @remarks
     * Get an article by ID.
     */
    get(request: operations.ArticlesGetRequest, options?: RequestOptions): Promise<components.Article>;
    /**
     * Update Article
     *
     * @remarks
     * Update an article.
     */
    update(request: operations.ArticlesUpdateRequest, options?: RequestOptions): Promise<components.Article>;
    /**
     * Delete Article
     *
     * @remarks
     * Delete an article.
     */
    delete(request: operations.ArticlesDeleteRequest, options?: RequestOptions): Promise<void>;
    /**
     * Get Article Receivers Count
     *
     * @remarks
     * Get number of potential receivers for an article.
     */
    receivers(request: operations.ArticlesReceiversRequest, options?: RequestOptions): Promise<components.ArticleReceivers>;
    /**
     * Send Article Preview
     *
     * @remarks
     * Send an article preview by email.
     */
    preview(request: operations.ArticlesPreviewRequest, options?: RequestOptions): Promise<any>;
    /**
     * Send Article
     *
     * @remarks
     * Send an article by email to all subscribers.
     */
    send(request: operations.ArticlesSendRequest, options?: RequestOptions): Promise<any>;
}
//# sourceMappingURL=articles.d.ts.map