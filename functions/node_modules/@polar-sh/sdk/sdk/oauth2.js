"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Oauth2 = void 0;
const oauth2Introspect_js_1 = require("../funcs/oauth2Introspect.js");
const oauth2Revoke_js_1 = require("../funcs/oauth2Revoke.js");
const oauth2Token_js_1 = require("../funcs/oauth2Token.js");
const oauth2Userinfo_js_1 = require("../funcs/oauth2Userinfo.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
const clients_js_1 = require("./clients.js");
class Oauth2 extends sdks_js_1.ClientSDK {
    get clients() {
        var _a;
        return ((_a = this._clients) !== null && _a !== void 0 ? _a : (this._clients = new clients_js_1.Clients(this._options)));
    }
    /**
     * Request Token
     *
     * @remarks
     * Request an access token using a valid grant.
     */
    async token(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, oauth2Token_js_1.oauth2Token)(this, request, options));
    }
    /**
     * Revoke Token
     *
     * @remarks
     * Revoke an access token or a refresh token.
     */
    async revoke(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, oauth2Revoke_js_1.oauth2Revoke)(this, request, options));
    }
    /**
     * Introspect Token
     *
     * @remarks
     * Get information about an access token.
     */
    async introspect(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, oauth2Introspect_js_1.oauth2Introspect)(this, request, options));
    }
    /**
     * Get User Info
     *
     * @remarks
     * Get information about the authenticated user.
     */
    async userinfo(options) {
        return (0, fp_js_1.unwrapAsync)((0, oauth2Userinfo_js_1.oauth2Userinfo)(this, options));
    }
}
exports.Oauth2 = Oauth2;
//# sourceMappingURL=oauth2.js.map