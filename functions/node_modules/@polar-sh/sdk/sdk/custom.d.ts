import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import * as operations from "../models/operations/index.js";
import { PageIterator } from "../types/operations.js";
export declare class Custom extends ClientSDK {
    /**
     * List Checkout Sessions
     *
     * @remarks
     * List checkout sessions.
     */
    list(request: operations.CheckoutsCustomListRequest, options?: RequestOptions): Promise<PageIterator<operations.CheckoutsCustomListResponse>>;
    /**
     * Create Checkout Session
     *
     * @remarks
     * Create a checkout session.
     */
    create(request: components.PolarCheckoutSchemasCheckoutCreate, options?: RequestOptions): Promise<components.PolarCheckoutSchemasCheckout>;
    /**
     * Get Checkout Session
     *
     * @remarks
     * Get a checkout session by ID.
     */
    get(request: operations.CheckoutsCustomGetRequest, options?: RequestOptions): Promise<components.PolarCheckoutSchemasCheckout>;
    /**
     * Update Checkout Session
     *
     * @remarks
     * Update a checkout session.
     */
    update(request: operations.CheckoutsCustomUpdateRequest, options?: RequestOptions): Promise<components.PolarCheckoutSchemasCheckout>;
    /**
     * Get Checkout Session from Client
     *
     * @remarks
     * Get a checkout session by client secret.
     */
    clientGet(request: operations.CheckoutsCustomClientGetRequest, options?: RequestOptions): Promise<components.CheckoutPublic>;
    /**
     * Update Checkout Session from Client
     *
     * @remarks
     * Update a checkout session by client secret.
     */
    clientUpdate(request: operations.CheckoutsCustomClientUpdateRequest, options?: RequestOptions): Promise<components.CheckoutPublic>;
    /**
     * Confirm Checkout Session from Client
     *
     * @remarks
     * Confirm a checkout session by client secret.
     *
     * Orders and subscriptions will be processed.
     */
    clientConfirm(request: operations.CheckoutsCustomClientConfirmRequest, options?: RequestOptions): Promise<components.CheckoutPublic>;
}
//# sourceMappingURL=custom.d.ts.map