import { PolarCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/errors/httpclienterrors.js";
import * as errors from "../models/errors/index.js";
import { SDKError } from "../models/errors/sdkerror.js";
import { SDKValidationError } from "../models/errors/sdkvalidationerror.js";
import * as operations from "../models/operations/index.js";
import { Result } from "../types/fp.js";
import { PageIterator } from "../types/operations.js";
/**
 * List License Keys
 *
 * @remarks
 * Get license keys connected to the given organization & filters.
 */
export declare function licenseKeysList(client: PolarCore, request: operations.LicenseKeysListRequest, options?: RequestOptions): Promise<PageIterator<Result<operations.LicenseKeysListResponse, errors.Unauthorized | errors.ResourceNotFound | errors.HTTPValidationError | SDKError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>>;
//# sourceMappingURL=licenseKeysList.d.ts.map