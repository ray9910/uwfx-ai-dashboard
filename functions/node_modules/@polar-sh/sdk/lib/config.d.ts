import { HTTPClient } from "./http.js";
import { Logger } from "./logger.js";
import { RetryConfig } from "./retries.js";
/**
 * Production environment
 */
export declare const ServerProduction = "production";
/**
 * Sandbox environment
 */
export declare const ServerSandbox = "sandbox";
/**
 * Contains the list of servers available to the SDK
 */
export declare const ServerList: {
    readonly production: "https://api.polar.sh";
    readonly sandbox: "https://sandbox-api.polar.sh";
};
export type SDKOptions = {
    accessToken?: string | (() => Promise<string>);
    httpClient?: HTTPClient;
    /**
     * Allows overriding the default server used by the SDK
     */
    server?: keyof typeof ServerList;
    /**
     * Allows overriding the default server URL used by the SDK
     */
    serverURL?: string;
    /**
     * Allows overriding the default retry config used by the SDK
     */
    retryConfig?: RetryConfig;
    timeoutMs?: number;
    debugLogger?: Logger;
};
export declare function serverURLFromOptions(options: SDKOptions): URL | null;
export declare const SDK_METADATA: {
    readonly language: "typescript";
    readonly openapiDocVersion: "0.1.0";
    readonly sdkVersion: "0.13.5";
    readonly genVersion: "2.438.15";
    readonly userAgent: "speakeasy-sdk/typescript 0.13.5 2.438.15 0.1.0 @polar-sh/sdk";
};
//# sourceMappingURL=config.d.ts.map